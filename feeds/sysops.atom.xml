<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Henry's SpiritLine</title><link href="http://henrychenv.github.io/" rel="alternate"></link><link href="http://henrychenv.github.io/feeds/sysops.atom.xml" rel="self"></link><id>http://henrychenv.github.io/</id><updated>2016-01-30T01:53:00+08:00</updated><entry><title>论坛搭建全记录</title><link href="http://henrychenv.github.io/note-for-build-website.html" rel="alternate"></link><updated>2016-01-30T01:53:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2015-12-28:note-for-build-website.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;概况&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;搭建&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#centos7"&gt;CentOS7&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;系统安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;安装必需的依赖包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;防火墙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#mysql"&gt;MySQL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;新建用户&amp;amp;权限管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;修改编码配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;虚拟环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_10"&gt;安装步骤:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#virtualenvvirtualenvwrapperpip"&gt;安装virtualenv和virtualenvwrapper(源码或者pip)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;创建虚拟环境目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bashrc"&gt;将配置加入~/.bashrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_12"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#uwsgi"&gt;uwsgi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pip"&gt;安装: 无论源码还是pip都很顺利，没什么好说的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;单独测试是否安装成功&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_14"&gt;项目配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_15"&gt;启动脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_16"&gt;将脚本添加到系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_17"&gt;验证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;nginx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_18"&gt;源码编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_19"&gt;启动脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_20"&gt;添加脚本到系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_21"&gt;验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_22"&gt;网站配置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#nginxconf"&gt;主配置文件nginx.conf:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vhost"&gt;vhost 配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;搭了个论坛玩。
以下文字时写给自己看的，首要目的是记录，其次才是得瑟。会有些啰嗦，因为不想写那种从头到位都很顺利跟说明书似的帖子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;概况&lt;/h2&gt;
&lt;p&gt;基本思路是LNMP:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;L: CentiOS7
  为什么用7，没什么特别的原因，喜欢7这个数字，CentOS7刚出来的时候就装了个，只是当时电脑配置差，玩得不爽，耿耿于怀，这次顺便了了这个结，当然坑也会有的。为什么不用ubuntu，就ubuntu默认防火墙关闭，CentOS默认防火墙打开这一点就让我不打算用ubuntu了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N: nginx
  没认真笔记多nginx喝apache，只知道大家现在更偏向于用nginx跑python项目，nginx也有虚拟主机，反向代理的玩法，可以很方便的在一台服务器上搭建多个网站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M: MySQL
  被oracle搞去了，因为担心被闭源，所以CentOS7用了由社区维护的MySQL的一个分支，MariaDB，但起起来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P: python
  用的django框架，论坛直接用的开源软件misago&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;搭建&lt;/h2&gt;
&lt;h3 id="centos7"&gt;CentOS7&lt;/h3&gt;
&lt;h4 id="_3"&gt;&lt;strong&gt;系统安装&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;直接用的阿里的ECS，创建虚拟机的时候选的CentOS7的镜像。 我觉得用root用户直接搭建环境不好，于是创建了一个管理员账号，以我自己命名，命令:&lt;code&gt;adduser henry -c "Henry Chen"&lt;/code&gt;用户henry在用sudo的时候不需要输入密码，命令:&lt;code&gt;visudo&lt;/code&gt;，会打开一个文件，找到这两行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Same thing without a password&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;%wheel  &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt;       NOPASSWD: ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;去掉第二行前面的注释(这里已经去掉了),记下wheel这个组，只要在这个组里面的用户，使用sudo都不用输入密码。
将henry加入到这个组中:&lt;code&gt;usermod -a -G henry wheel&lt;/code&gt;。
安装必要的软件: git, etc&lt;/p&gt;
&lt;h4 id="_4"&gt;&lt;strong&gt;安装必需的依赖包&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;sudo yum install libjpeg-turbo-devel zlib-devel python-devel libfreehand-devel python-imgcreate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_5"&gt;&lt;strong&gt;防火墙&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;这个镜像用起来跟本地不一样，本地安装的CentOS7种，防火墙会阻止几乎全部端口，而ECS中只要你用到了哪个端口，它会帮你自动打开这个端口，不用自己操作防火墙。本地做实验的时候需要操作防火墙，需要以下命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;firewall-cmd —list-port&lt;/span&gt;
&lt;span class="code-line"&gt;firewall-cmd --zone&lt;span class="o"&gt;=&lt;/span&gt;dmz --add-port&lt;span class="o"&gt;=&lt;/span&gt;80/tcp&lt;/span&gt;
&lt;span class="code-line"&gt;firewall-cmd --zone&lt;span class="o"&gt;=&lt;/span&gt;dmz --add-port&lt;span class="o"&gt;=&lt;/span&gt;3306/tcp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若要永久生效方法在后面加上&lt;code&gt;--permanent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是我遇到的第一个坑，装上mysql，添加好用户和权限后却不能登录，google出来的方向都是让我去改iptables，但CentOS7中将iptables换成了firewall，有网友建议卸载firewall，安装iptables，但我觉得人家用了firewall总是有他的道理的，于是决定用firewall。&lt;/p&gt;
&lt;h3 id="mysql"&gt;MySQL&lt;/h3&gt;
&lt;h4 id="_6"&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;因为觉得数据库能用就行，没必要源码编译，于是想直接用源里面的，但CentOS7的源中并没有自带mysql，而是MariaDB，这是由社区维护的一个MySQL的分支，但据说启动后查看进程看到的是mariadb不是mysql，有点怪怪的，于是我去官方找了个源，然后安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;sudo yum install mysql-community-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在安装完成后会看到replaced mariadb的信息，这个有意思。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初次安装mysql，root用户没有密码，为了安全起见，最好设置下密码&lt;br /&gt;
&lt;code&gt;set password for 'root'@'localhost' =password('password');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_7"&gt;&lt;strong&gt;新建用户&amp;amp;权限管理&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;create user &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;create user &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database.* to username@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database.* to username@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_8"&gt;&lt;strong&gt;修改编码配置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在&lt;code&gt;/etc/my.cnf&lt;/code&gt;中加上如下配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;[mysql]&lt;/span&gt;
&lt;span class="code-line"&gt;default-character-set =utf8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里的字符编码必须和&lt;code&gt;/usr/share/mysql/charsets/Index.xml&lt;/code&gt;中一致。
创建数据库的时候也需要加上字符编码的选项: &lt;code&gt;create database xxx default character set utf8;&lt;/code&gt;
参考: &lt;a href="http://www.cnblogs.com/starof/p/4680083.html"&gt;centos7 mysql数据库安装和配置&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_9"&gt;虚拟环境&lt;/h3&gt;
&lt;h4 id="_10"&gt;安装步骤:&lt;/h4&gt;
&lt;h5 id="virtualenvvirtualenvwrapperpip"&gt;安装virtualenv和virtualenvwrapper(源码或者pip)&lt;/h5&gt;
&lt;h5 id="_11"&gt;创建虚拟环境目录&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkdir $HOME/.virtualenvs&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="bashrc"&gt;将配置加入~/.bashrc&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$HOME/.virtualenvs&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="_12"&gt;测试&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkvirtualenv bookbbs&lt;/code&gt;，没问题就ok&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考:&lt;a href="http://liuzhijun.iteye.com/blog/1872241"&gt;Python 虚拟环境:Virtualenv&lt;/a&gt;
   此时就可先在虚拟环境中安装好所需的依赖，然后把项目用sudo python manage.py runserver 0.0.0.0:80的形式跑起来了，我在做到这一步的时候是先把项目跑起来的，因为没在CentOS7上玩过，怕跑不起来，所以想先在这一步看看跑起来的效果如何。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="uwsgi"&gt;uwsgi&lt;/h3&gt;
&lt;p&gt;因为是所有项目都要用的，所以不该放在某个虚拟环境中，应该在虚拟环境外安装，如果不是root则需要sudo的权限。然后需要找一个uwsgi的配置文件，以及启动脚本，可以不用启动脚本，自己将启动命令加到开机启动的脚本中，但还是觉得启动脚本的方式方便管理些。&lt;/p&gt;
&lt;h4 id="pip"&gt;安装: 无论源码还是pip都很顺利，没什么好说的&lt;/h4&gt;
&lt;h4 id="_13"&gt;单独测试是否安装成功&lt;/h4&gt;
&lt;p&gt;新建test.py文件，内容如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;200 OK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后在终端运行: &lt;code&gt;uwsgi --http :8001 --wsgi-file test.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在浏览器内输入:&lt;code&gt;http://127.0.0.1:8001&lt;/code&gt;(视情况更改ip)，看是否有&lt;code&gt;“Hello World”&lt;/code&gt;输出，若没有输出，检查安装过程。&lt;/p&gt;
&lt;h4 id="_14"&gt;项目配置文件&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="code-line"&gt;socket = /path/to/socket&lt;/span&gt;
&lt;span class="code-line"&gt;#socket = 127.0.0.1:8989&lt;/span&gt;
&lt;span class="code-line"&gt;#plugin = python&lt;/span&gt;
&lt;span class="code-line"&gt;wsgi-file = /path/to/project/wsgi.py&lt;/span&gt;
&lt;span class="code-line"&gt;processes = 2&lt;/span&gt;
&lt;span class="code-line"&gt;master = true&lt;/span&gt;
&lt;span class="code-line"&gt;max-requests = 5000&lt;/span&gt;
&lt;span class="code-line"&gt;daemonize = /path/to/log&lt;/span&gt;
&lt;span class="code-line"&gt;logfile-chmod = 644&lt;/span&gt;
&lt;span class="code-line"&gt;pidfile = /path/to/pid&lt;/span&gt;
&lt;span class="code-line"&gt;limit-as = 1000&lt;/span&gt;
&lt;span class="code-line"&gt;enable-threads = true&lt;/span&gt;
&lt;span class="code-line"&gt;vacuum = true&lt;/span&gt;
&lt;span class="code-line"&gt;log-maxsize = 40960000&lt;/span&gt;
&lt;span class="code-line"&gt;threads = 2&lt;/span&gt;
&lt;span class="code-line"&gt;virtualenv = /path/to/virtualenv&lt;/span&gt;
&lt;span class="code-line"&gt;uid = 1000  # 运行的用户&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_15"&gt;启动脚本&lt;/h4&gt;
&lt;p&gt;没在网上找到个满意的，所以改造了下，这个脚步目前只能启动uwsgi进程，但是没法杀进程。启动后，指定目录下的项目配置文件如果发生改变，会自动重启相应进程(uwsgi支持通过&amp;ndash;emperor制定配置文件目录，如果配置文件发生改变，会自动重启相应进程).
以下是脚本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# chkconfig:   - 90 15&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# wsgI init Script&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# processname: uwsgi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# description: Used to run python and wsgi web applciations.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# author: Miguel Clara (miguelmclara@gmail.com)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/rc.d/init.d/functions&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# vars&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;###########################&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/path/to/uwsgi &lt;span class="o"&gt;(&lt;/span&gt;which uwsgi&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;desc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;uWSGI&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;daemoN_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--emperor /path/to/uwsgi/configs &amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# Change this if needed!&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;lockfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/path/to/uwsgi.lock&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;start &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  daemon $PROG &lt;span class="nv"&gt;$DAE&lt;/span&gt;MON_OPTS&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;stop &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  killproc $PROG&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;reload &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Reloading &lt;/span&gt;$&lt;span class="s2"&gt;NAME&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  killproc $PROG -HUP&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;restart &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  status $PROG&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status_q&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  rh_status &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in&lt;/span&gt;
&lt;span class="code-line"&gt;  start&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; ! pidof $PROG &amp;gt;/dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n&lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC is already started...\n&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  stop&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; pidof $PROG &amp;gt;/dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n&lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC can not be stoped because its not running...\n&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  restart&lt;span class="p"&gt;|&lt;/span&gt;force-reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  status&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  *&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|reload|force-reload|status}&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_16"&gt;将脚本添加到系统&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;cp this_script /etc/init.d/uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig —add uswgi&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig uwsgi on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_17"&gt;验证&lt;/h4&gt;
&lt;p&gt;重启服务器，查看进程是否存在。重启不仅是为了验证是否开机自启动，如果不重启可能会遇到很奇怪的问题，比如不知道什么东西启动了进程，杀业杀不完。&lt;/p&gt;
&lt;h3 id="nginx"&gt;nginx&lt;/h3&gt;
&lt;h4 id="_18"&gt;源码编译&lt;/h4&gt;
&lt;p&gt;版本: nginx-1.8.0.tar.gz.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/home/henry/softwares/nginx &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --user&lt;span class="o"&gt;=&lt;/span&gt;henry &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --group&lt;span class="o"&gt;=&lt;/span&gt;henry &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-pcre&lt;span class="o"&gt;=&lt;/span&gt;/home/henry/packages/pcre-8.37 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_realip_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_stub_status_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_gzip_static_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_stub_status_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_ssl_module&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;make&lt;/span&gt;
&lt;span class="code-line"&gt;make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_19"&gt;启动脚本&lt;/h4&gt;
&lt;p&gt;init.d的脚本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# nginx - this script starts and stops the nginx daemon&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# chkconfig:   - 85 15&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# description:  NGINX is an HTTP(S) server, HTTP(S) reverse \&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#               proxy and IMAP/POP3 proxy server&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# processname: nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# config:      /home/henry/softwares/nginx/conf/nginx.conf&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# config:      /etc/sysconfig/nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# pidfile:     /home/henry/softwares/nginx/logs/nginx.pid&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Source function library.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/rc.d/init.d/functions&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Source networking configuration.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/sysconfig/network&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Check that networking is up.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;NETWORKING&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/sbin/nginx&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename $nginx&lt;span class="k"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;NGINX_CONF_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/conf/nginx.conf&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /etc/sysconfig/nginx &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /etc/sysconfig/nginx&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;lockfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/subsys/nginx.lock&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;make_dirs&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="c1"&gt;# make required directories&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;$nginx -V 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;configure arguments:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/[^*]*--user=\([^ ]*\).*/\1/g&amp;#39;&lt;/span&gt; -&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;`grep &lt;/span&gt;$&lt;span class="s2"&gt;user /etc/passwd`&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       useradd -M -s /bin/nologin $user&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nv"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;$nginx -V 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;configure arguments:&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;for&lt;/span&gt; opt in $options&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; $opt &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;.*-temp-path&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; $opt &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; -f 2&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               &lt;span class="c1"&gt;# echo &amp;quot;creating&amp;quot; $value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               mkdir -p $value &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R $user $value&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; -x $nginx &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; -f $NGINX_CONF_FILE &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt;    make_dirs&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    daemon $nginx -c $NGINX_CONF_FILE&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    killproc $prog -QUIT&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;/span&gt;
&lt;span class="code-line"&gt;    sleep 1&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Reloading &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    killproc $nginx -HUP&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;force_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    restart&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;configtest&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  $nginx -t -c $NGINX_CONF_FILE&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    status $prog&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status_q&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    restart&lt;span class="p"&gt;|&lt;/span&gt;configtest&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    force-reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        force_reload&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    status&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    condrestart&lt;span class="p"&gt;|&lt;/span&gt;try-restart&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    *&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; $&lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_20"&gt;添加脚本到系统&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;sudo cp this_script /etc/init.d/nginx&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig —add nginx&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig nginx on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_21"&gt;验证&lt;/h4&gt;
&lt;p&gt;重启服务器,访问ip，看看是否能出现nginx成功的界面。&lt;/p&gt;
&lt;h4 id="_22"&gt;网站配置&lt;/h4&gt;
&lt;p&gt;采用虚拟主机的方式，在主配置文件中指定虚拟主机配置文件目录，目录中给每个网站写一个配置文件:&lt;/p&gt;
&lt;h5 id="nginxconf"&gt;主配置文件nginx.conf:&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;user  henry;&lt;/span&gt;
&lt;span class="code-line"&gt;worker_processes  1;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;error_log  logs/error.log;&lt;/span&gt;
&lt;span class="code-line"&gt;#error_log  logs/error.log  notice;&lt;/span&gt;
&lt;span class="code-line"&gt;#error_log  logs/error.log  info;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pid        logs/nginx.pid;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;events {&lt;/span&gt;
&lt;span class="code-line"&gt;    worker_connections  1024;&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;http {&lt;/span&gt;
&lt;span class="code-line"&gt;    include       mime.types;&lt;/span&gt;
&lt;span class="code-line"&gt;    default_type  application/octet-stream;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #log_format  main  &amp;#39;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;    #                  &amp;#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;    #                  &amp;#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;#39;;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #access_log  logs/access.log  main;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    sendfile        on;&lt;/span&gt;
&lt;span class="code-line"&gt;    #tcp_nopush     on;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #keepalive_timeout  0;&lt;/span&gt;
&lt;span class="code-line"&gt;    keepalive_timeout  65;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    gzip  on;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    include conf.d/*.conf;&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="vhost"&gt;vhost 配置&lt;/h5&gt;
&lt;p&gt;在跟nginx.conf同级目录下&lt;code&gt;mkdir conf.d&lt;/code&gt;,用于存放vhost配置文件
vhost文件: 例如:bookbbs.conf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;server {&lt;/span&gt;
&lt;span class="code-line"&gt;   listen 80;&lt;/span&gt;
&lt;span class="code-line"&gt;   server_name  192.168.30.154;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   charset utf-8;&lt;/span&gt;
&lt;span class="code-line"&gt;   access_log  logs/bookbbs_access.log;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location /static/ {&lt;/span&gt;
&lt;span class="code-line"&gt;      alias /path/to/static/dir;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location /media/ {&lt;/span&gt;
&lt;span class="code-line"&gt;      alias /path/to/media/dir;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location / {&lt;/span&gt;
&lt;span class="code-line"&gt;       uwsgi_pass unix:///home/henry/softwares/nginx/logs/BookBBS.sock;&lt;/span&gt;
&lt;span class="code-line"&gt;       include uwsgi_params;&lt;/span&gt;
&lt;span class="code-line"&gt;       client_max_body_size    10m;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要注意的是，配置文件中该加”/“的地方通通都得加上，否则会失败。
ps: 配置文件在git.oschin.net中能找到(私有仓库)&lt;/p&gt;</summary><category term="centos7"></category><category term="nginx"></category><category term="uwsgi"></category><category term="mysql"></category><category term="python"></category></entry></feed>