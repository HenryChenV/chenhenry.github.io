<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Henry's SpiritLine</title><link href="http://henrychenv.github.io/" rel="alternate"></link><link href="http://henrychenv.github.io/feeds/all.atom.xml" rel="self"></link><id>http://henrychenv.github.io/</id><updated>2016-03-24T22:15:00+08:00</updated><entry><title>反序输入指定行数的字符串</title><link href="http://henrychenv.github.io/just-for-fun-c.html" rel="alternate"></link><updated>2016-03-24T22:15:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-03-24:just-for-fun-c.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;好久没写c语言了，今天帮一同学写个例子&lt;br /&gt;
要求如下  &lt;/p&gt;
&lt;p&gt;先输入行数，然后依次输入字符串，&lt;br /&gt;
输入完成后，反序输出每行的字符串  &lt;/p&gt;
&lt;p&gt;代码如下:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="cp"&gt;#define MAX_CHARS_PER_LINE 30&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;typedef&lt;/span&gt; &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;struct&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="n"&gt;str_node&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pstr_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="nf"&gt;print_reversed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%c&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="nf"&gt;create_str_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pstr_node&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_node&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;malloc str node error!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;malloc&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;perror&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;malloc node data error!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;strcpy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sc"&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;free_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;tmp_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;tmp_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cur_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp_node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tmp_node&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;MAX_CHARS_PER_LINE&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_str_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;how many lines: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="n"&gt;total&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;line %d: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;scanf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;MAX_CHARS_PER_LINE&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;max chars per line is %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MAX_CHARS_PER_LINE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;pstr_node&lt;/span&gt; &lt;span class="n"&gt;new_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;create_str_node&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;input_buffer&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;new_node&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cur_node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;new_node&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;       &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;while&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;print_reversed&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cur_node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cur_node&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cur_node&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;next&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;free_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;free all.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;some space is not free.&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;how many lines: 2&lt;/span&gt;
&lt;span class="code-line"&gt;line 1: hello&lt;/span&gt;
&lt;span class="code-line"&gt;line 2: world&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;olleh&lt;/span&gt;
&lt;span class="code-line"&gt;dlrow&lt;/span&gt;
&lt;span class="code-line"&gt;free all.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;好久没写c语言了，写写开心下。&lt;/p&gt;</summary><category term="fun"></category><category term="c"></category></entry><entry><title>实现 Python 单例模式的几种方式</title><link href="http://henrychenv.github.io/python-design-pattern-singleton.html" rel="alternate"></link><updated>2016-03-13T11:40:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-03-13:python-design-pattern-singleton.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;利用模块只会导入一次的特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#__metaclass____call__"&gt;利用__metaclass__和__call__&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#metaclass-new"&gt;利用 metaclass 和 new&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="_1"&gt;利用模块只会导入一次的特性&lt;/h3&gt;
&lt;p&gt;在python中，多次导入某个模块，其实只会在第一次产生导入的动作
World.py:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# coding=utf-8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;利用python模块只会导入一次的特性写单例模式&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;World&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;the world is running.&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;_world&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;population&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_world&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;population&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;run&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_world&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;上面的_world, population, run只会在第一次导入模块的时候导入, 所以是单例&lt;/p&gt;
&lt;h3 id="__metaclass____call__"&gt;利用__metaclass__和__call__&lt;/h3&gt;
&lt;p&gt;metaclass 是产生类的的类，可以在某个类中设置__metaclass__🔝用哪个类产生这个类,
对于metaclass会先调用__new__产生类，然后调用metaclass的__new__初始化这个类(注意，初始化出来的是类，不是实例),metaclass中定义的方法都试类方法，只能通过类名调用(和用@classmethod生成的类方法不同，无法用实例调用)。
在metaclass中定义__call__方法，这个方法会在ClassName()时被调用，这个方法为类方法，因此可以用这个方法保证单例。&lt;/p&gt;
&lt;p&gt;mysingleton.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;bases&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;attrs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;create new instance.&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__call__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;instance was already existed.&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;instance&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MySingleton&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;__metaclass__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        __init__ 只会执行一次&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;init mc&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-------------------------&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;ms1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MySingleton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;ms2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MySingleton&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;ms1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;ms2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ms2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;$ python mysingleton.py &lt;/span&gt;
&lt;span class="code-line"&gt;-------------------------&lt;/span&gt;
&lt;span class="code-line"&gt;None&lt;/span&gt;
&lt;span class="code-line"&gt;create new instance.&lt;/span&gt;
&lt;span class="code-line"&gt;init mc&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;__main__.MySingleton object at 0x1052b9490&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;instance was already existed.&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;__main__.MySingleton object at 0x1052b9490&amp;gt; 4381709456&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;__main__.MySingleton object at 0x1052b9490&amp;gt; 4381709456&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="metaclass-new"&gt;利用 &lt;strong&gt;metaclass&lt;/strong&gt; 和 &lt;strong&gt;new&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;类似于利用__call__，只是没上面那么繁琐
MySingleton2.py&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__new__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__new__&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="nb"&gt;hasattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_instance&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_instance&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__new__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                                                              &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_instance&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;init&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cls&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;SingletonMeta&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;__metaclass__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;SingletonMeta&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;init test&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;------------------------------------&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;t1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;t2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Test&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;t2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;SingletonMeta&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.SingletonMeta&amp;#39;&lt;/span&gt;&amp;gt; &amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.SingletonMeta&amp;#39;&lt;/span&gt;&amp;gt; __new__&lt;/span&gt;
&lt;span class="code-line"&gt;init &amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.Test&amp;#39;&lt;/span&gt;&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Test&lt;/span&gt;
&lt;span class="code-line"&gt;------------------------------------&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.Test&amp;#39;&lt;/span&gt;&amp;gt; &amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.SingletonMeta&amp;#39;&lt;/span&gt;&amp;gt; __new__&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.Test&amp;#39;&lt;/span&gt;&amp;gt; &amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.SingletonMeta&amp;#39;&lt;/span&gt;&amp;gt; __new__&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.Test&amp;#39;&lt;/span&gt;&amp;gt; 140689093520960&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;class &lt;span class="s1"&gt;&amp;#39;__main__.Test&amp;#39;&lt;/span&gt;&amp;gt; 140689093520960&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="design-pattern"></category></entry><entry><title>[TED] Why you will fail to have a great career</title><link href="http://henrychenv.github.io/why-you-will-fail-to-have-a-great-career.html" rel="alternate"></link><updated>2016-02-21T20:36:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-21:why-you-will-fail-to-have-a-great-career.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;I want to discuss with you this afternoon why you&amp;rsquo;re going to fail to have a
great career. (Laughter)
今天下午我想和你们讨论一下，你为什么不会成就伟业。（笑声）&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m an economist. I do dismal. End of the day, it&amp;rsquo;s ready for dismal remarks. I
only want to talk to those of you who want a great career. I know some of you
have already decided you want a good career. You&amp;rsquo;re going to fail,
too-(Laughter)-because-Goodness, you&amp;rsquo;re all cheery about failing. (Laughter)
Canadian group, undoubtedly. (Laughter) Those trying to have good careers are
going to fail, because, really, good jobs are now disappearing. There are great
jobs and great careers, and then there are the high-workload, high-stress,
bloodsucking, soul-destroying kinds of jobs, and practically nothing in
between.
我是个经济学家。我让人心情低落。一天过完了，准备好听听让人心情低落的评论。我只想和你们想要成就伟业的那些人谈。
我知道你们有些人已经决定了，你们想要一个成功的事业。你们也会失败的——（笑声）——，因为－天呐，你们听到失败都这么高兴。（笑声）无疑是加拿大人。（笑声）想事业有成的人会失败，因为，真的，现在好工作都在消失。有好工作，和好事业，也有工作量大，压力大，吸食血液，侵蚀灵魂的那种工作，而且几乎没有工作能好点的。&lt;/p&gt;
&lt;p&gt;So the people looking for good jobs are going to fail. I&amp;rsquo;m going to talk about
those looking for great jobs, great careers, and why you&amp;rsquo;re going to, why
you&amp;rsquo;re going to fail. First reason is that no matter how many times people tell
you, &amp;ldquo;If you want a great career, you have to pursue your passion, you have to
pursue your dreams, you have to pursue, the greatest fascination in your life,&amp;rdquo;
you hear it again and again and then you decide not to do it. It doesn&amp;rsquo;t matter
how many times you download Steven J.&amp;rsquo;s Stanford commencement address, you
still look at it and decide not to do it.
所以想找好工作的人会失败。我谈谈那些寻找伟业的人，你们为什么要寻找，为什么会失败。第一个原因是不管多少次别人告诉你，“如果你想成就伟业，你就必须追随你的热忱，你必须追随你的梦想，你必须追随，你人生中最大的吸引，“
你听过这句话一遍又一遍，然后你决定，不去这样做。不管你下载多少次，Steven
J在斯坦福大学的开学演讲，你还是看看然后决定不去做。&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not quite sure why you decide not to do it. You&amp;rsquo;re too lazy to do it. It&amp;rsquo;s
too hard. You&amp;rsquo;re afraid if you look for your passion and don&amp;rsquo;t find it, you&amp;rsquo;ll
feel like you&amp;rsquo;re an idiot, so then you make excuses about why you&amp;rsquo;re not going
to look for your passion. And they are excuses, ladies and gentlemen. We&amp;rsquo;re
going to go through a whole long list, your creativity, and thinking of excuses
not to do what you really need to do if you want to have a great career.
我不太确定你为什么决定不去做。你太懒了。这事太难。你害怕如果你去寻找梦想然后找不到，你会觉得你像个白痴，所以你给自己找借口，为什么你不去追寻你的梦想。这些都是借口，女士们先生们。我们要列一个长单子，你的创造力，想想你不去做成就伟业该做的事情的借口。&lt;/p&gt;
&lt;p&gt;So, for example, one of your great excuses is, &amp;ldquo;Well, great careers are really
and truly, for most people, just a matter of luck, so I&amp;rsquo;m going to stand
around, I&amp;rsquo;m going to try to be lucky, and if I&amp;rsquo;m lucky, I&amp;rsquo;ll have a great
career. If not, I&amp;rsquo;ll have a good career.&amp;rdquo; But a good career is an
impossibility, so that&amp;rsquo;s not going to work.
所以，举例来说，你众多借口之一是，
“嗯，伟业实际上对于大多数人来说，只是运气问题，所以我就在这待着，我就试试做那个幸运的人，然后如果我真幸运的话，我就能成就伟业。如果不能，我就找个还不错的事业。”
但是没有还不错的事业，所以这个行不通。&lt;/p&gt;
&lt;p&gt;Then, your other excuse is, &amp;ldquo;Yes, there are special people who pursue their
passions, but they are geniuses. They are Steven J. I&amp;rsquo;m not a genius. When I
was five, I thought I was a genius, but my professors have beaten that idea out
of my head long since.&amp;rdquo; (Laughter) Mm? &amp;ldquo;And now I know I am completely
competent.&amp;rdquo; Now, you see, if this was 1950, being completely competent, that
would have given you a great career. But guess what? This is almost 2012, and
saying to the world, &amp;ldquo;I am totally, completely competent,&amp;rdquo; is damning yourself
with the faintest of praise.
然后，你还有其他借口：“是的，有那些与众不同的人，
追寻自己的梦想，但是他们是天才。他们是Steven J.
我不是天才。我五岁的时候以为自己是天才，但是我的教授们早就把这个念头，打消了。”（笑声）嗯？
“然后现在我知道自己完全有能力。” 现在你看，如果这是在1950年，
完全有能力，就能让你成就伟业。但是你知道么？现在几乎是2012年了，对世界说“我完全，绝对，有能力，”就是用最无力的称赞谴责你自己。&lt;/p&gt;
&lt;p&gt;And then, of course, another excuse: &amp;ldquo;Well, I would do this, I would do this,
but, but, well, after all, I&amp;rsquo;m not weird. Everybody knows that people who
pursue their passions are somewhat obsessive. A little strange? Mm? Mm? Okay?
You know, a fine line between madness and genius. I&amp;rsquo;m not weird. I&amp;rsquo;ve read
Steven J.&amp;rsquo;s biography. Oh my goodness. I am not that person. I am nice. I am
normal. I&amp;rsquo;m a nice, normal person, and nice, normal people don&amp;rsquo;t have passion.
Ah. But I still want a great career. I&amp;rsquo;m not prepared to pursue my passion, so
I know what I&amp;rsquo;m going to do, because I have, I have a solution, I have a
strategy. It&amp;rsquo;s the one Mommy and Daddy told me about. Mommy and Daddy told me
that if I worked hard, I&amp;rsquo;d have a good career. So, if you work hard and have a
good career, if you work really, really, really hard, you&amp;rsquo;ll have a great
career. Doesn&amp;rsquo;t that, like, mathematically make sense?&amp;rdquo; Hmm. Not. (Laughter)
But you&amp;rsquo;ve managed to talk yourself into that.
然后，当然，另外一个借口：“嗯，我会做这个，我会做这个，但是，但是，
嗯，毕竟，我不是个怪人。每个人都知道那些追寻自己梦想的人，都多少有点强迫症。有点奇怪？嗯？嗯？好吧？你知道的，疯子和天才一线之隔。
我不是个怪人。我读过Steven
J的传记。我的天呐。我不是那种人。我是好人。我是正常人。我是正常的好人，而且正常的好人，没有梦想。啊。但是我还是想要成就伟业。我还没准备好去追寻梦想，所以我知道，我要做什么，因为我有办法，我有策略。就是爸爸妈妈告诉过我的那个。爸爸妈妈告诉我说如果我努力工作，
我会有个不错的事业。所以，如果你努力工作，而且有个不错的事业，如果你工作特别特别特别努力，你就能成就伟业。这在数学上不是也成立么？”嗯&amp;hellip;不是的。（笑声）但是你还是让自己信了这话。&lt;/p&gt;
&lt;p&gt;You know what? Here&amp;rsquo;s a little secret. You want to work? You want to work
really, really, really hard? You know what? You&amp;rsquo;ll succeed. The world will give
you the opportunity to work really, really, really, really hard, but are you so
sure that that&amp;rsquo;s going to give you a great career when all the evidence is to
the contrary?
你知道么？这有一个小秘密。你想工作？你想工作特别特别特别努力？你知道么？你会成功的。这个世界会给你机会去工作得特别特别特别努力，
但是你就那么确信这能让你成就伟业，即使所有的证据都指向另一边？&lt;/p&gt;
&lt;p&gt;So let&amp;rsquo;s assume, let&amp;rsquo;s deal with those of you who are trying to find your
passion. You actually understand that you really had better do it, never mind
the excuses. You&amp;rsquo;re trying to find your passion, and you&amp;rsquo;re so happy. You found
something you&amp;rsquo;re interested in.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;    所以咱们假设，咱们来处理一下你们当中，想追寻梦想的人。你实际上明白你最好这么做。抛开借口。你试图找到你的梦想，而且你这么快乐。你找到了你感兴趣的事。&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have an interest! I have an interest! You tell me. You say, &amp;ldquo;I have an
interest!&amp;rdquo; I say, &amp;ldquo;That&amp;rsquo;s wonderful! And what, what are you trying to tell me?
That you — &amp;ldquo; &amp;ldquo;Well, I have an interest.&amp;rdquo; I say, &amp;ldquo;Do you have passion?&amp;rdquo; &amp;ldquo;I have
an interest,&amp;rdquo; you say. Your interest is compared to what? &amp;ldquo;Well, I&amp;rsquo;m interested
in this.&amp;rdquo; And what about the rest of humanity&amp;rsquo;s activities? &amp;ldquo;I&amp;rsquo;m not interested
in them.&amp;rdquo; You&amp;rsquo;ve looked at them all, have you? &amp;ldquo;No. Not exactly.&amp;rdquo;
我有个兴趣！我有个兴趣！你告诉我。你说，“我有个兴趣！”我说，“太好了！”你想告诉我什么呢？
“嗯，我有个兴趣。”我说，“你有热忱么？”， “我有兴趣，”你说。你的兴趣和什么比较？
“嗯，我对这个感兴趣。”那其他一切的人类活动呢？
“我对那些没兴趣。”你把那些都看过一遍了？“没有。不完全是。”&lt;/p&gt;
&lt;p&gt;Passion is your greatest love. Passion is the thing that will help you create
the highest expression of your talent. Passion, interest-it&amp;rsquo;s not the same
thing. Are you really going to go to your sweetie and say, &amp;ldquo;Marry me! You&amp;rsquo;re
interesting.&amp;rdquo; (Laughter) Won&amp;rsquo;t happen. Won&amp;rsquo;t happen, and you will die alone.
(Laughter)
热忱是你最高程度的热爱。热忱是能帮助你最好地成就自己才华的事情。热忱，兴趣——不是一回事。你真的会去找你的甜心然后说：“嫁给我吧！你很有意思。”（笑声）不会发生的。不会发生，然后你会孤独终老。（笑声）&lt;/p&gt;
&lt;p&gt;What you want, what you want, what you want, is passion. It is beyond interest.
You need 20 interests, and then one of them, one of them might grab you, one of
them might engage you more than anything else, and then you may have found your
greatest love in comparison to all the other things that interest you, and
that&amp;rsquo;s what passion is.
你想要的，你想要的，你想要的，是热忱。它超越兴趣。你需要20个兴趣，然后它们其中一个，其中一个会抓住你，让你燃起激情。
然后你就找到了与其他事情相比之下，你最大的热爱，那就是你的热忱。&lt;/p&gt;
&lt;p&gt;I have a friend, proposed to his sweetie. He was an economically rational
person. He said to his sweetie, &amp;ldquo;Let us marry. Let us merge our
interests.&amp;rdquo;(Laughter)
我有个朋友，向他女友求婚。
他是个会过日子的人。他对他女友说：“咱们结婚吧。让咱们融合利益。”（笑声）&lt;/p&gt;
&lt;p&gt;Yes he did. &amp;ldquo;I love you truly,&amp;rdquo; he said. &amp;ldquo;I love you deeply. I love you more
than any other woman I&amp;rsquo;ve ever encountered. I love you more than Mary, Jane,
Susie, Penelope, Ingrid, Gertrude, Gretel-I was on a German exchange program
then.&amp;rdquo; (Laughter) &amp;ldquo;I love you more than&amp;hellip;&amp;rdquo; All right! She left the room
halfway through his enumeration of his love for her. After he got over his
surprise at being, you know, turned down, he concluded he&amp;rsquo;d had a narrow escape
from marrying an irrational person, although he did make a note to himself that
the next time he proposed, it was perhaps not necessary to enumerate all of the
women he had auditioned for the part. (Laughter)
是的，他这么说的。“我真心爱你，”他说，“我深深爱着你。我爱你，胜过其他任何女人。我爱你胜过Mary,
Jane, Susie, Penelope,Ingrid, Gertrude, Gretel——
我那时候在一个德国的交换项目里。”（笑声）“我爱你胜过——”，
好的！她在他列举到一半的时候，离开了房间。在他从被拒绝的惊讶中缓过来之后，他总结了他刚刚成功逃离，和一个不理性的人结婚的厄运。虽然他也对自己说，下次求婚的时候，不必要列举所有过往的女朋友。（笑声）&lt;/p&gt;
&lt;p&gt;But the point stands. You must look for alternatives so that you find your
destiny, or are you afraid of the word &amp;ldquo;destiny&amp;rdquo;? Does the word &amp;ldquo;destiny&amp;rdquo; scare
you? That&amp;rsquo;s what we&amp;rsquo;re talking about, and if you don&amp;rsquo;t find the highest
expression of your talent, if you settle for &amp;ldquo;interesting,&amp;rdquo; what the hell ever
that means, do you know what will happen at the end of your long life? Your
friends and family will be gathered in the cemetery, and there, beside your
gravesite will be a tombstone, and inscribed on that tombstone, it will say,
&amp;ldquo;Here lies a distinguished engineer who invented Velcro.&amp;rdquo; But what that
tombstone should have said, in an alternative lifetime, what it should have
said if it was your highest expression of talent, was, &amp;ldquo;Here lies the last
Nobel Laureate in Physics, who formulated the Grand Unified Field Theory and
demonstrated the practicality of warp drive.&amp;rdquo;(Laughter)
但是这个论点是成立的。你必须寻找各种选择，才能找到命中注定的那个，或者你害怕“命中注定”这个词么？
“命中注定”这个词吓着你么？这就是我们要谈的，而且如果你找不到，你才能的最高表达，如果你在，“有意思”这里止步不前，不管这他妈的是什么意思，你知道在你漫长的一生即将结束的时候会发生什么吗？你的亲友们聚集在墓地里，在这，你的坟边上有个墓碑，这个墓碑上刻着字，说，“此地长眠着一位发明了Velcro的杰出工程师。”但是这个墓碑上也应该刻着，在一个平行时空里，如果这是你才能的最高表达它就应该刻着，“此地长眠着一位诺贝尔物理学奖得主，他规范了‘大统一场论’并且示范了曲速引擎的实用性。”（笑声）&lt;/p&gt;
&lt;p&gt;Velcro, indeed. (Laughter)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;    Velcro，的确。（笑声）&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;One was a great career. One was a missed opportunity. But then, there are some
of you, in spite of all these excuses, you will find, you will find your
passion, and you&amp;rsquo;ll still fail.
一个是伟业。一个是失掉的机会。但是，你们当中有些人，抛开这些借口，你们会找到，你们会找到自己的热忱，然后你们还是失败了。&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;re going to fail, because, because you&amp;rsquo;re not going to do it, because you
will have invented a new excuse, any excuse to fail to take action, and this
excuse I&amp;rsquo;ve heard so many times. &amp;ldquo;Yes, I would pursue a great career, but I
value human relationships more than accomplishment. I want to be a great
friend. I want to be a great spouse. I want to be a great parent, and I will
not sacrifice them on the altar of great accomplishment.&amp;rdquo;(Laughter)
你会失败，因为，因为你不会着手去做，因为你会想出新的借口，任何让你只说不做的借口，而且这个借口，我已经听过很多次了。“是的，我会追求一番伟业，但是相比成就，我更看重人与人之间的关系。我想做一个好朋友。我想做一个好伴侣。我想做一个好父母，而且我不会为伟大的成就而牺牲这些。”（笑声）&lt;/p&gt;
&lt;p&gt;What do you want me to say? Now, do you really want me to say now, tell you,
&amp;ldquo;Really, I swear I don&amp;rsquo;t kick children.&amp;rdquo; (Laughter) Hmm? Look at the worldview
you&amp;rsquo;ve given yourself. You&amp;rsquo;re a hero no matter what, and I, by suggesting, ever
so delicately, that you might want a great career, must hate children. I don&amp;rsquo;t
hate children. I don&amp;rsquo;t kick them. Yes, there was a little kid wandering through
this building when I came here, and no, I didn&amp;rsquo;t kick him. (Laughter)
你们想让我说什么？现在，你们真的想让我说，告诉你们，“真的，我发誓我不踢小孩。”（笑声）嗯？看看你给自己定的世界观。无论如何你都是个英雄，然而我，通过暗示，这么小心翼翼地，说你可能想要成就伟业，一定痛恨小孩。我不恨小孩。我不踢他们。是的，刚才我来的时候有个小孩走过来，
我没踢他。（笑声）&lt;/p&gt;
&lt;p&gt;Course, I had to tell him that the building was for adults only and to get out.
He mumbled something about his mother, and I told him she&amp;rsquo;d probably find him
outside anyway. Last time I saw him, he was on the stairs crying. (Laughter)
What a wimp. (Laughter)
当然，我不得不告诉他这个楼是给大人的，他得出去。他含糊地说他妈妈什么的，然后我跟他说他妈估计在外面找他呢。我上次看到他的时候他正在台阶上哭呢。（笑声）真是个懦夫。（笑声）&lt;/p&gt;
&lt;p&gt;But what do you mean? That&amp;rsquo;s what you expect me to say. You really think, you
really think it&amp;rsquo;s appropriate that you should actually take children and use
them as a shield? You know what will happen someday, you, you ideal parent,
you? The kid will come to you someday and say, &amp;ldquo;I know what I want to be. I
know what I&amp;rsquo;m going to do with my life.&amp;rdquo; You are so happy. It&amp;rsquo;s the
conversation a parent wants to hear, because your kid&amp;rsquo;s good in math, and you
know you&amp;rsquo;re going to like what comes next. Says your kid, &amp;ldquo;I have decided I
want to be a magician. I want to perform magic tricks on the stage.&amp;rdquo; (Laughter)
但是你是什么意思？这就是你们期待我说的。你真的认为，你真的认为，拿小孩当挡箭牌，合适吗？你知道有一天会发生什么，你，完美的父母，对吗？你的孩子有一天会跟你说，
“我知道我想做什么。我知道我想怎么度过一生。”你特别高兴。这种对话父母最爱听了，因为你的孩子数学好，而且你知道你会爱听你孩子接下来的话。你孩子说，“我决定了，我想做个魔术师。我想在舞台上表演魔术。”（笑声）&lt;/p&gt;
&lt;p&gt;And what do you say? You say, you say, &amp;ldquo;Umm &amp;hellip; that&amp;rsquo;s risky, kid. Might fail,
kid. Don&amp;rsquo;t make a lot of money at that, kid. You know, I don&amp;rsquo;t know, kid, you
should think about that again, kid, you&amp;rsquo;re so good at math, why don&amp;rsquo;t you &amp;hellip; &amp;rdquo;
然后你说什么？ 你说，你说，
“嗯..……那样比较不保险，孩子。有可能会失败，孩子。挣不了大钱，孩子。你知道的，我不知道，孩子，
你应该再想想，孩子，你数学这么好，为什么不——”&lt;/p&gt;
&lt;p&gt;And the kid interrupts you, and says, &amp;ldquo;But it is my dream. It is my dream to do
this.&amp;rdquo; And what are you going to say? You know what you&amp;rsquo;re going to say? &amp;ldquo;Look
kid. I had a dream once, too, but&amp;hellip;but.&amp;rdquo; So how are you going to finish the
sentence with your &amp;ldquo;but&amp;rdquo;? &amp;ldquo;&amp;hellip; But. I had a dream too, once, kid, but I was
afraid to pursue it.&amp;rdquo; Or, are you going to tell him this? &amp;ldquo;I had a dream once,
kid. But then you were born.&amp;rdquo; (Laughter)
然后你孩子打断你，说：“但是那是我的梦想。我梦想就是成为魔术师。”然后你要说什么？你知道你要说什么吗？“你看，孩子，我过去也有过梦想。但是——但是。”所以你想怎么用“但是”结束你的句子？
“……但是，我过去也有过梦想，孩子，但是我没敢去追随。”还是，你想告诉他这个？“我过去有梦想，孩子。但是之后你出生了。”（笑声）&lt;/p&gt;
&lt;p&gt;(Laughter) (Applause)&lt;/p&gt;
&lt;p&gt;（笑声）（掌声）&lt;/p&gt;
&lt;p&gt;Do you, do you really want to use your family, do you really ever want to look
at your spouse and your kid and see your jailers? There was something you could
have said to your kid when he or she said, &amp;ldquo;I have a dream.&amp;rdquo; You could have
said, looked the kid in the face, and said, &amp;ldquo;Go for it, kid, just like I did.&amp;rdquo;
But you won&amp;rsquo;t be able to say that because you didn&amp;rsquo;t. So you can&amp;rsquo;t. (Laughter)
你真的，真的想利用你的家庭，你真的想把你的伴侣，
和你的孩子当成狱卒吗？你其实可以这么跟你孩子讲。当他／她说“我有个梦想”的时候，你可以说，面对你的孩子，说，“去追随它吧，孩子，就像我那样。”
但是你没法那么说，因为你没去追随梦想。所以你不能那么说。（笑声）&lt;/p&gt;
&lt;p&gt;And so the sins of the parents are visited on the poor children. Why will you
seek refuge in human relationships as your excuse not to find and pursue your
passion? You know why. In your heart of hearts, you know why, and I&amp;rsquo;m being
deadly serious. You know why you would get all warm and fuzzy and wrap yourself
up in human relationships. It is because you are -You know what you are.
然后父母的罪恶，就在可怜的孩子们身上应验了。你为什么把人际关系当成你不去追随你的热忱的借口？你自己知道为什么。在你内心的内心，你知道为什么，而且我现在非常严肃。你知道你为什么会在人际关系中层层包裹自己。这是因为你是——你知道你是什么。&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;re afraid to pursue your passion. You&amp;rsquo;re afraid to look ridiculous. You&amp;rsquo;re
afraid to try. You&amp;rsquo;re afraid you may fail. Great friend, great spouse, great
parent, great career. Is that not a package? Is that not who you are? How can
you be one without the other? But you&amp;rsquo;re afraid.
你不敢去追求梦想。你害怕自己看起来像个疯子。你不敢去尝试。你害怕失败。好朋友，好伴侣，好父母，伟业。不是打包在一起的吗？这难道不是你？你怎么能符合其中一个却不符合另一个？但是你害怕。&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s why you&amp;rsquo;re not going to have a great career, unless - unless, that
most evocative of all English words &amp;ndash; unless. But the unless word is also
attached to that other, most terrifying phrase, &amp;ldquo;If only I had &amp;hellip; &amp;ldquo; &amp;ldquo;If only I
had &amp;hellip; &amp;rdquo; If you ever have that thought ricocheting in your brain, it will hurt
a lot.
这就是为什么你不会成就伟业，除非——除非，最引人回忆的词——除非。但是除非这个词和另外一个，
最可怕的短语是连着的，“如果我当初……”
“如果我当初……”如果你曾经有过这个想法在你脑海里回旋，它会特别伤人。&lt;/p&gt;
&lt;p&gt;So, those are the many reasons why you are going to fail to have a great
career, unless &amp;hellip;
所以，这些就是，你为什么不能成就伟业，的众多原因。 除非……“&lt;/p&gt;
&lt;p&gt;Unless.
除非。&lt;/p&gt;
&lt;p&gt;Thank you. (Applause)
谢谢。（掌声）&lt;/p&gt;</summary><category term="ted"></category><category term="dream"></category></entry><entry><title>MySQL 删除重复数据</title><link href="http://henrychenv.github.io/delete-duplicate-records.html" rel="alternate"></link><updated>2016-02-18T11:54:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-18:delete-duplicate-records.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;删除重复数据&lt;br /&gt;
image_info表中每个ImgUrl应该只对应一条记录,删除多余记录&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;image_info&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;where&lt;/span&gt; &lt;span class="k"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3010&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;image_info&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;group&lt;/span&gt; &lt;span class="k"&gt;by&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ImgUrl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="mysql"></category><category term="work"></category></entry><entry><title>用ConfigParser解析配置项</title><link href="http://henrychenv.github.io/python-configparser.html" rel="alternate"></link><updated>2016-02-11T23:51:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-11:python-configparser.html</id><summary type="html">&lt;p&gt;python提供了现成的配置文件解析标准库ConfigParser,&lt;br /&gt;
使用方法不做详细介绍,只是记录下他的配置项查找规则,避免踩坑。&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;查找顺序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;测试代码&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="_1"&gt;查找顺序&lt;/h3&gt;
&lt;p&gt;使用时得注意点他的参数查找顺序,特别提防构造函数中的defaults和get方法中的vars参数，&lt;br /&gt;
配置项查找规则如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找不到section，raise ConfigParser.NoSectionError&lt;/li&gt;
&lt;li&gt;vars&lt;/li&gt;
&lt;li&gt;配置文件的对应section下&lt;/li&gt;
&lt;li&gt;配置文件[DEFAULT]下&lt;/li&gt;
&lt;li&gt;构造函数的defaults&lt;/li&gt;
&lt;li&gt;raise ConfigParser.NoOptionError&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="_2"&gt;测试代码&lt;/h3&gt;
&lt;p&gt;值得一提的事，配置项支持占位符的方式&lt;br /&gt;
配置文件format.conf:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;[DEFAULT]&lt;/span&gt;
&lt;span class="code-line"&gt;conn_str = %(dbn)s://%(user)s:%(pw)s@%(host)s:%(port)s/%(db)s&lt;/span&gt;
&lt;span class="code-line"&gt;dbn = mysql&lt;/span&gt;
&lt;span class="code-line"&gt;user = root&lt;/span&gt;
&lt;span class="code-line"&gt;host = localhost&lt;/span&gt;
&lt;span class="code-line"&gt;port = 3306&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;[db1]&lt;/span&gt;
&lt;span class="code-line"&gt;user = aaa&lt;/span&gt;
&lt;span class="code-line"&gt;pw = ppp&lt;/span&gt;
&lt;span class="code-line"&gt;db = example&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;[db2]&lt;/span&gt;
&lt;span class="code-line"&gt;host = 192.168.7.110&lt;/span&gt;
&lt;span class="code-line"&gt;pw = www&lt;/span&gt;
&lt;span class="code-line"&gt;db = example&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;测试代码:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# coding=utf-8&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ConfigParser&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;read_conf&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;defaults&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;dbn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.0.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3306&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;vars&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;dbn&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;test_vars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;user&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;admin_vars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;127.0.1.1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="s1"&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3306&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConfigParser&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;defaults&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;defaults&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;format.conf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;conn_str&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;conf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;db2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;conn_str&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;vars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;vars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;read_conf&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="reading-notes"></category><category term="python"></category><category term="configparser"></category></entry><entry><title>用Counter计数</title><link href="http://henrychenv.github.io/python-collections-counter.html" rel="alternate"></link><updated>2016-02-11T22:37:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-11:python-collections-counter.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;如果想对一个list中的元素计数怎么办，&lt;br /&gt;
比如: 统计[2332, 1232, 2332, 3321, 9921]中每个元素的个数&lt;br /&gt;
今天不小心看到个不错的东西，记录下: 可以使用collections.Counter&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;collections&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;ss&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1232&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2332&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3321&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9921&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ss&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;Counter({2332: 2, 1232: 1, 3321: 1, 9921: 1})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;常用的几个方法:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Counter(some_data).elements(): 查看key值&lt;/li&gt;
&lt;li&gt;Counter(some_data).most_common(2): 查看频率最高的2个&lt;/li&gt;
&lt;li&gt;Counter(some_data).update(some_data2): 就是将some_data和some_data2合并了&lt;/li&gt;
&lt;li&gt;Counter(some_data).subtract(some_data2): 统计some_data-some_data2的值&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;p&gt;文档也很详细:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;Dict&lt;/span&gt; &lt;span class="n"&gt;subclass&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;counting&lt;/span&gt; &lt;span class="n"&gt;hashable&lt;/span&gt; &lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;Sometimes&lt;/span&gt; &lt;span class="n"&gt;called&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;bag&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;multiset&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;Elements&lt;/span&gt; &lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;stored&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dictionary&lt;/span&gt; &lt;span class="n"&gt;keys&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;are&lt;/span&gt; &lt;span class="n"&gt;stored&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;dictionary&lt;/span&gt; &lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;abcdeabcdabcaba&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# count elements from a string&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;most_common&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                &lt;span class="c1"&gt;# three most common elements&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                       &lt;span class="c1"&gt;# list all unique elements&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;d&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;e&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;elements&lt;/span&gt;&lt;span class="p"&gt;()))&lt;/span&gt;   &lt;span class="c1"&gt;# list elements with repetitions&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s1"&gt;&amp;#39;aaaaabbbbcccdde&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;sum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;values&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;                 &lt;span class="c1"&gt;# total of all counts&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                          &lt;span class="c1"&gt;# count of letter &amp;#39;a&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;shazam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;           &lt;span class="c1"&gt;# update counts from an iterable&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;...&lt;/span&gt;     &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;                &lt;span class="c1"&gt;# by adding 1 to each element&amp;#39;s count&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                          &lt;span class="c1"&gt;# now there are seven &amp;#39;a&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;del&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                      &lt;span class="c1"&gt;# remove all &amp;#39;b&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                          &lt;span class="c1"&gt;# now there are zero &amp;#39;b&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;simsalabim&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;       &lt;span class="c1"&gt;# make another counter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                     &lt;span class="c1"&gt;# add in the second counter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;                          &lt;span class="c1"&gt;# now there are nine &amp;#39;a&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                       &lt;span class="c1"&gt;# empty the counter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Note&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;reduced&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;remain&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="n"&gt;until&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;deleted&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;counter&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="n"&gt;cleared&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;aaabbc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;                     &lt;span class="c1"&gt;# reduce the count of &amp;#39;b&amp;#39; by two&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;most_common&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                 &lt;span class="c1"&gt;# &amp;#39;b&amp;#39; is still in, but its count is zero&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Init&lt;/span&gt; &lt;span class="n"&gt;docstring&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;empty&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt; &lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;  &lt;span class="n"&gt;And&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;given&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;an&lt;/span&gt; &lt;span class="nn"&gt;input&lt;/span&gt; &lt;span class="nn"&gt;iterable.&lt;/span&gt;  &lt;span class="nn"&gt;Or&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;initialize&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;another&lt;/span&gt; &lt;span class="nn"&gt;mapping&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;elements&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;their&lt;/span&gt; &lt;span class="n"&gt;counts&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;                           &lt;span class="c1"&gt;# a new, empty counter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gallahad&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="c1"&gt;# a new counter from an iterable&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;           &lt;span class="c1"&gt;# a new counter from a mapping&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="c1"&gt;# a new counter from keyword args&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;&lt;/p&gt;
&lt;p&gt;感觉标准库应该会用什么高端算法搞定这事,结果很失望&lt;br /&gt;
Counter继承了dict, 下面这段代码是对给定参数的计数,分别对上面&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gallahad&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                 &lt;span class="c1"&gt;# a new counter from an iterable&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;           &lt;span class="c1"&gt;# a new counter from a mapping&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                   &lt;span class="c1"&gt;# a new counter from keyword args&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;三种情况作了处理&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;isinstance&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Mapping&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="n"&gt;self_get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iteritems&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;count&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Counter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# fast path when counter is empty&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;self_get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;kwds&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;kwds&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这样的话，简单情况下我完全可以直接用代码中的&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;self_get&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;elem&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;iterable&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;self_get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;elem&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="reading-notes"></category><category term="python"></category><category term="collections"></category><category term="counter"></category></entry><entry><title>Python中的build-in function</title><link href="http://henrychenv.github.io/python-build-in-function.html" rel="alternate"></link><updated>2016-02-11T16:17:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-11:python-build-in-function.html</id><summary type="html">&lt;p&gt;python中build-in function的笔记，持续更新&lt;/p&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sorted"&gt;sorted&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;普通玩法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list"&gt;多维list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list_1"&gt;字典中的list&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#list_2"&gt;List中的字典&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#map"&gt;map&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#zip"&gt;zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="sorted"&gt;sorted&lt;/h2&gt;
&lt;p&gt;sorted(iterable, cmp=None, key=None, reverse=False) &amp;ndash;&amp;gt; new sorted list&lt;br /&gt;
cmp: 自定义比较函数,返回-1,0,1代表&amp;gt;=&amp;lt;,&lt;br /&gt;
key: 自定义函数,用于取出iterable每个元素中用于比较的项&lt;br /&gt;
reverse: 是否反序  &lt;/p&gt;
&lt;h3 id="_1"&gt;普通玩法&lt;/h3&gt;
&lt;p&gt;推荐用key，因为cmp每次都会调用一次，效率低&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;162&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;persons&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;162&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;conke&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;sandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;alex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;163&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;cmp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;cmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;163&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;alex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;conke&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;sandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;164&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;164&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;alex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;conke&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;henry&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;age&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;33&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;sandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="list"&gt;多维list&lt;/h3&gt;
&lt;p&gt;可以用operator.itemgetter指定列的先后&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;186&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;gameresults&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;186&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;95.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Alan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;86.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Mandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;82.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Mandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;187&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;operator&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;itemgetter&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;188&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gameresults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;itemgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;188&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Mandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;82.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;95.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;A&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Alan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;86.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Mandy&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;86&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="list_1"&gt;字典中的list&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;199&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;mydict&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;199&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Du&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="s1"&gt;u&amp;#39;Li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="s1"&gt;u&amp;#39;Ma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="s1"&gt;u&amp;#39;Wang&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="s1"&gt;u&amp;#39;Zhang&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="s1"&gt;u&amp;#39;Zhe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mydict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iteritems&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;itemgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Zhang&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;E&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Du&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Wang&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Li&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;M&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Zhe&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;H&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;]),&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;Ma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;])]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="list_2"&gt;List中的字典&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;213&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="n"&gt;gameresults&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;213&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;David&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Carol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Patty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;71.48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;In&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;214&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;span class="nb"&gt;sorted&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gameresults&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;itemgetter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;Out&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;214&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Bob&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;75&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;David&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Patty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;71.48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;u&amp;#39;losses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Carol&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;rating&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;57&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;wins&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;h2 id="map"&gt;map&lt;/h2&gt;
&lt;p&gt;TO DO&lt;/p&gt;
&lt;hr /&gt;
&lt;h2 id="zip"&gt;zip&lt;/h2&gt;
&lt;p&gt;TO DO&lt;/p&gt;
&lt;hr /&gt;</summary><category term="python"></category><category term="build-in-function"></category></entry><entry><title>python中判断一个实例是否为空</title><link href="http://henrychenv.github.io/python-if-none.html" rel="alternate"></link><updated>2016-02-10T19:43:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-10:python-if-none.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;在python中，通过如下代码判断一个对象是否为空时&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;如果A实现了__nonzero__会调用__nonzero__方法,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__nonzero__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;testing nonzero&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;testing len&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;$ python main.py &lt;/span&gt;
&lt;span class="code-line"&gt;testing nonzero&lt;/span&gt;
&lt;span class="code-line"&gt;not empty&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;否则调用__len__(),&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__len__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;testing len&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;$ python main.py &lt;/span&gt;
&lt;span class="code-line"&gt;testing nonzero&lt;/span&gt;
&lt;span class="code-line"&gt;empty&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;hr /&gt;
&lt;p&gt;否则，直接返回True&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;A&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;not empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br/&gt;
结果:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;$ python main.py &lt;/span&gt;
&lt;span class="code-line"&gt;testing nonzero&lt;/span&gt;
&lt;span class="code-line"&gt;not empty&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="reading-notes"></category><category term="python"></category><category term="build-in-function"></category></entry><entry><title>简单聊聊with ... as ...</title><link href="http://henrychenv.github.io/python-with-as.html" rel="alternate"></link><updated>2016-02-08T22:58:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-08:python-with-as.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;简单聊聊with as都干了些什么.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;with expr1 as e1, expr2 as e2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;等价与&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;expr1&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;expr2&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with语句执行过程:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;执行expr, 返回一个context manager对象  &lt;/li&gt;
&lt;li&gt;加载context manager 的__exit__以后备用  &lt;/li&gt;
&lt;li&gt;加载context manager 的__enter__方法  &lt;/li&gt;
&lt;li&gt;如果设置了目标对象，则将__enter__()的返回值赋给这个对象  &lt;/li&gt;
&lt;li&gt;执行with下面的代码块  &lt;/li&gt;
&lt;li&gt;如果步骤5代码正常结束,调用__exit__方法,其返回值会被忽略  &lt;/li&gt;
&lt;li&gt;如果步骤5代码发生异常,调用context manager 的__exit__方法，并传入异常类型,值和traceback， 如果__exit__()的返回值为false，异常会被重新抛出，如果为true，异常挂起，程序继续执行  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用with as有三种方式:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用类似于open这种会反悔context manager的方法直接获得__enter__和__exit__  &lt;/li&gt;
&lt;li&gt;自己写一个class实现__enter__和__exit__  &lt;/li&gt;
&lt;li&gt;使用contextlib.contextmanager装饰起装饰一个generator,比较恶心的是这个generator只能yield一个值，不能超过1个，比如很好用的那个用生成器写fibonacci,具体参考文档,再吐槽一次,好恶心  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以用下面的代码折腾下上面的理论:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;contextlib&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyContextManger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;object&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__enter__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;entering ...&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Im return from __enter__&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#        return self&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__exit__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#        return False  #  with中的代码块正确时,直接返回False也不会抛错&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;leaving ...&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;exception_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;exception_value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;traceback&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exception_type&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no exceptions!&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;exception_type&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;value error !!!&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;other error&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nd"&gt;@contextlib.contextmanager&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;nothing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sth befor yield&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sth after yield&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_with_mycontextmanager&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;MyContextManger&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;mcm&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;mcm: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;mcm&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Do sth ...&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;just for test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_with_open&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/tmp/tmp.txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;w&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="n"&gt;fp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nothing to write&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;do sth ...&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;play_with_contextlib&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;nothing&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;fl&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;fl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;open file and write&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;play_with_open&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;MyContextManger&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;play_with_mycontextmanager&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;contexlib.contextmanager&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;play_with_contextlib&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;print&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;结果  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;$ python mycontextmanage.py&lt;/span&gt;
&lt;span class="code-line"&gt;open file and write&lt;/span&gt;
&lt;span class="code-line"&gt;do sth ...&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;MyContextManger&lt;/span&gt;
&lt;span class="code-line"&gt;entering ...&lt;/span&gt;
&lt;span class="code-line"&gt;mcm:  Im return from __enter__&lt;/span&gt;
&lt;span class="code-line"&gt;Do sth ...&lt;/span&gt;
&lt;span class="code-line"&gt;leaving ...&lt;/span&gt;
&lt;span class="code-line"&gt;&amp;lt;type &amp;#39;exceptions.ValueError&amp;#39;&amp;gt; just for test &amp;lt;traceback object at 0x109a16638&amp;gt;&lt;/span&gt;
&lt;span class="code-line"&gt;value error !!!&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;contexlib.contextmanager&lt;/span&gt;
&lt;span class="code-line"&gt;sth befor yield&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;sth after yield&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;我这种写法是不是有点懒。  &lt;/p&gt;</summary><category term="reading-notes"></category><category term="python"></category><category term="with"></category></entry><entry><title>有趣的 sys.modules</title><link href="http://henrychenv.github.io/python-sys-modules.html" rel="alternate"></link><updated>2016-02-08T16:47:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-02-06:python-sys-modules.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;在某本给了91条python建议的树上看到了一段奇怪的代码, 愿意是希望将常量放到一个文件中, &lt;br /&gt;
看到这代码, 大概意思也能猜到, 怎么用也能猜到, 但其中对于sys.modules的用法让人觉得很有意思。&lt;/p&gt;
&lt;p&gt;常量文件constant.py 代码:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#-*- coding=utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;import constant&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;_const&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConstError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;TypeError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ConstCaseError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ConstError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;new _const&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__setattr__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;has_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConstError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Can&amp;#39;t change const. &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isupper&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConstCaseError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \&lt;/span&gt;
&lt;span class="code-line"&gt;                    &lt;span class="s1"&gt;&amp;#39;const name &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot; is not all uppercase&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;__dict__&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_const&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;constant&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_FIRST_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_SECOND_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_THIRD_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_FORTH_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;测试代码 test.py:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#-*- coding=utf-8 -*-&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;constant&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;ipdb&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;ipdb&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_trace&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="c1"&gt;### XXX BREAKPOINT&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_SECOND_CONSTANT&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_THIRD_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;constant&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;MY_FORTH_CONSTANT&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;test1.py中可以顺利调用constant.py中的常量, 如果在test1.py中想修改常亮也会报错, 
为什么会有这种效果。&lt;/p&gt;
&lt;p&gt;文章肯定在constant.py的:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;modules&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_const&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;constant&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;原因在于, __name__表示的是这个module的名称, 可能是__main__或者文件名去掉后缀(这点不展开), sys.modules是一个已知模块的模块名称到模块的映射, 如果要找的模块的名称在sys.modules中, 那么回按照sys.modules去找, 否则sys.path中找, 在constant.py中用sys.modules[module_name] = module 的方式改变了constant.py这个模块的指向, 在constant.py中再次import constant时, 因为constant这个名称在sys.modules中已有, 所以会按照sys.modules的映射找出这个模块, 而在import 前已经将指向改成了_const(), 所以再次import 后, constant就等同于_const()了。&lt;/p&gt;
&lt;p&gt;个人觉得这个用法比较有趣, 特此记录, 无他意。&lt;/p&gt;</summary><category term="reading-notes"></category><category term="python"></category><category term="fun"></category></entry><entry><title>vim配置</title><link href="http://henrychenv.github.io/vim-configuration.html" rel="alternate"></link><updated>2016-01-31T14:46:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-01-31:vim-configuration.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;一直用vim座位ide，我的配置是基于前辈的改的，现在放在我的&lt;a href="https://github.com/HenryChenV/vimrc"&gt;github&lt;/a&gt;上.&lt;/p&gt;
&lt;p&gt;之前vim的主题一直用的solorize的light背景，最近感觉这个背景有点亮，也可能是看腻了，想换个暗一点的背景。
于是选择了molokai，很像sublime主题的一款主题，但发现选中时候，选中的部分看得不明显，于是做了些修改，主要是颜色方面的。&lt;br /&gt;
颜色可以参考&lt;br /&gt;
&lt;img alt="vim所有颜色" src="images/vim/vim-color.png" /&gt;&lt;/p&gt;
&lt;p&gt;我修改后的主题代码,new_molokai.vim:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot; Vim color file&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot; Author: Tomas Restrepo &amp;lt;tomas@winterdom.com&amp;gt;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot; Note: Based on the monokai theme for textmate&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; by Wimer Hazenberg and its darker variant &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot; by Hamish Stuart Macpherson&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi clear&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="nv"&gt;background&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;dark&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; version &amp;gt; 580&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="s2"&gt;&amp;quot; no guarantees for version 5.8 and below, but this makes it stop&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;    &amp;quot;&lt;/span&gt; complaining&lt;/span&gt;
&lt;span class="code-line"&gt;    hi clear&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; exists&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;syntax_on&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        syntax reset&lt;/span&gt;
&lt;span class="code-line"&gt;    endif&lt;/span&gt;
&lt;span class="code-line"&gt;endif&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;let&lt;/span&gt; g:colors_name&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;molokai&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; exists&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;g:molokai_original&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;let&lt;/span&gt; s:molokai_original &lt;span class="o"&gt;=&lt;/span&gt; g:molokai_original&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;let&lt;/span&gt; s:molokai_original &lt;span class="o"&gt;=&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;endif&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Boolean         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#AE81FF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Character       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#E6DB74&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Number          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#AE81FF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi String          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#E6DB74&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Conditional     &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Constant        &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#AE81FF               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Cursor          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#000000 guibg=#F8F8F0&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Debug           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#BCA3A3               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Define          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Delimiter       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#8F8F8F&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi DiffAdd                       &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#13354A&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi DiffChange      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#89807D guibg=#4C4745&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi DiffDelete      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#960050 guibg=#1E0010&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi DiffText                      &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#4C4745 gui=italic,bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Directory       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#A6E22E               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Error           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#960050 guibg=#1E0010&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi ErrorMsg        &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672 guibg=#232526 gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Exception       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#A6E22E               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Float           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#AE81FF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi FoldColumn      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#465457 guibg=#000000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Folded          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#465457 guibg=#000000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Function        &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#A6E22E&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Identifier      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FD971F&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Ignore          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#808080 guibg=bg&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi IncSearch       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#C4BE89 guibg=#000000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Keyword         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Label           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#E6DB74               gui=none&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Macro           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#C4BE89               gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi SpecialKey      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF               gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi MatchParen      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#000000 guibg=#FD971F gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi ModeMsg         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#E6DB74&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi MoreMsg         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#E6DB74&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Operator        &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot; complete menu&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi Pmenu           guifg=#66D9EF guibg=#000000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi PmenuSel                      guibg=#808080&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi PmenuSbar                     guibg=#080808&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi PmenuThumb      guifg=#66D9EF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi PreCondit       guifg=#A6E22E               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi PreProc         guifg=#A6E22E&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi Question        guifg=#66D9EF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi Repeat          guifg=#F92672               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;hi Search          guifg=#FFFFFF guibg=#455354&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; marks column&lt;/span&gt;
&lt;span class="code-line"&gt;hi SignColumn      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#A6E22E guibg=#232526&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi SpecialChar     &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi SpecialComment  &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#465457               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Special         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF guibg=bg      gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi SpecialKey      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#888A85               gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; has&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;spell&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    hi SpellBad    &lt;span class="nv"&gt;guisp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FF0000 gui=undercurl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    hi SpellCap    &lt;span class="nv"&gt;guisp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#7070F0 gui=undercurl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    hi SpellLocal  &lt;span class="nv"&gt;guisp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#70F0F0 gui=undercurl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    hi SpellRare   &lt;span class="nv"&gt;guisp&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FFFFFF gui=undercurl&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;endif&lt;/span&gt;
&lt;span class="code-line"&gt;hi Statement       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672               gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi StatusLine      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#455354 guibg=fg&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi StatusLineNC    &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#808080 guibg=#080808&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi StorageClass    &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FD971F               gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Structure       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Tag             &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F92672               gui=italic&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Title           &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#ef5939&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Todo            &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FFFFFF guibg=bg      gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Typedef         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Type            &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF               gui=none&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Underlined      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#808080               gui=underline&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi VertSplit       &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#808080 guibg=#080808 gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi VisualNOS                     &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#403D3D&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi Visual                        &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#403D3D&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi WarningMsg      &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#FFFFFF guibg=#333333 gui=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;hi WildMenu        &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#66D9EF guibg=#000000&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;if&lt;/span&gt; s:molokai_original &lt;span class="o"&gt;==&lt;/span&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Normal          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F8F8F2 guibg=#272822&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Comment         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#75715E&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi CursorLine                    &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#3E3D32&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi CursorColumn                  &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#3E3D32&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi LineNr          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#BCBCBC guibg=#3B3A32&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi NonText         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#BCBCBC guibg=#3B3A32&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Normal          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#F8F8F2 guibg=#1B1D1E&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Comment         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#465457&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi CursorLine                    &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#293739&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi CursorColumn                  &lt;span class="nv"&gt;guibg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#293739&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi LineNr          &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#BCBCBC guibg=#232526&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi NonText         &lt;span class="nv"&gt;guifg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="c1"&gt;#BCBCBC guibg=#232526&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;end&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; Support &lt;span class="k"&gt;for&lt;/span&gt; 256-color terminal&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;if &amp;amp;t_Co &amp;gt; 255&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Boolean         ctermfg=135&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Character       ctermfg=144&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Number          ctermfg=135&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi String          ctermfg=144&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Conditional     ctermfg=161               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Constant        ctermfg=135               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Cursor          ctermfg=16  ctermbg=253&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Debug           ctermfg=225               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Define          ctermfg=81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Delimiter       ctermfg=241&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi DiffAdd                     ctermbg=24&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi DiffChange      ctermfg=181 ctermbg=239&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi DiffDelete      ctermfg=162 ctermbg=53&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi DiffText                    ctermbg=102 cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Directory       ctermfg=118               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Error           ctermfg=219 ctermbg=89&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi ErrorMsg        ctermfg=199 ctermbg=16    cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Exception       ctermfg=118               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Float           ctermfg=135&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi FoldColumn      ctermfg=67  ctermbg=16&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Folded          ctermfg=67  ctermbg=16&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Function        ctermfg=118&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Identifier      ctermfg=208&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Ignore          ctermfg=244 ctermbg=232&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi IncSearch       ctermfg=193 ctermbg=16&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Keyword         ctermfg=161               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Label           ctermfg=229               cterm=none&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Macro           ctermfg=193&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi SpecialKey      ctermfg=81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi MatchParen      ctermfg=16  ctermbg=208 cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi ModeMsg         ctermfg=229&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi MoreMsg         ctermfg=229&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Operator        ctermfg=161&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   &amp;quot;&lt;/span&gt; &lt;span class="nb"&gt;complete&lt;/span&gt; menu&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Pmenu           &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;81&lt;/span&gt;  &lt;span class="nv"&gt;ctermbg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;   hi PmenuSel                    &lt;span class="nv"&gt;ctermbg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;244&lt;/span&gt;
&lt;span class="code-line"&gt;   hi PmenuSbar                   &lt;span class="nv"&gt;ctermbg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;232&lt;/span&gt;
&lt;span class="code-line"&gt;   hi PmenuThumb      &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;81&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   hi PreCondit       &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;118&lt;/span&gt;               &lt;span class="nv"&gt;cterm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bold&lt;/span&gt;
&lt;span class="code-line"&gt;   hi PreProc         &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;118&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Question        &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;81&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Repeat          &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;161&lt;/span&gt;               &lt;span class="nv"&gt;cterm&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bold&lt;/span&gt;
&lt;span class="code-line"&gt;   hi Search          &lt;span class="nv"&gt;ctermfg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;253&lt;/span&gt; &lt;span class="nv"&gt;ctermbg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;66&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="s2"&gt;&amp;quot; marks column&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi SignColumn      ctermfg=118 ctermbg=235&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi SpecialChar     ctermfg=161               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi SpecialComment  ctermfg=245               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Special         ctermfg=81  ctermbg=232&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi SpecialKey      ctermfg=245&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Statement       ctermfg=161               cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi StatusLine      ctermfg=238 ctermbg=253&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi StatusLineNC    ctermfg=244 ctermbg=232&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi StorageClass    ctermfg=208&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Structure       ctermfg=81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Tag             ctermfg=161&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Title           ctermfg=166&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Todo            ctermfg=231 ctermbg=232   cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Typedef         ctermfg=81&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Type            ctermfg=81                cterm=none&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Underlined      ctermfg=244               cterm=underline&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi VertSplit       ctermfg=244 ctermbg=232   cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi VisualNOS                   ctermbg=238&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Visual                      ctermbg=238&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi WarningMsg      ctermfg=231 ctermbg=238   cterm=bold&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi WildMenu        ctermfg=81  ctermbg=16&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Normal          ctermfg=252 ctermbg=233&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi Comment         ctermfg=59&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi CursorLine                  ctermbg=234   cterm=none&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi CursorColumn                ctermbg=234&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi LineNr          ctermfg=250 ctermbg=234&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;   hi NonText         ctermfg=250 ctermbg=234&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="s2"&gt;end&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="vim"></category><category term="theme"></category><category term="fun"></category></entry><entry><title>折腾博客</title><link href="http://henrychenv.github.io/paly-with-blog.html" rel="alternate"></link><updated>2016-02-08T23:47:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-01-30:paly-with-blog.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;博客类型&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;博客主题&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_3"&gt;告一段落吧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#todo"&gt;TODO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;最近折腾博客折腾的优点走火入魔,从博客类型的挑选到博客主题的挑选，以及最后对样式的改动，一直在不停的纠结。  &lt;/p&gt;
&lt;h1 id="_1"&gt;博客类型&lt;/h1&gt;
&lt;p&gt;因为买了个云服务器，所以总想物尽其用，刚开始总想找个复杂点的开源博客来用。看了很多开源软件，搜索范围是python写的博客，因为这样改起来方便。从国人写的到github上已经有setup.py的zinnia，感觉好看的不支持markdown，支持markdown的后台那叫一个丑，干脆直接干掉后台给个文件上传的得了。  &lt;/p&gt;
&lt;p&gt;后来看到&lt;a href="http://blog.csdn.net/kamidox/article/details/40485773"&gt;一篇博客&lt;/a&gt;中提到一个问题，就是个人博客需要数据库吗。刚看到这个问题时感觉很好笑，博客防到网上补救是给人看的吗，连数据库都没怎么让人家评论你的文章。看完了作者的文章后，我发现原来评论模块可以直接外接别人现成的东西，而这些在一个叫pelican 的项目中已经集成了。也就是说，如果你想搭个博客，评论模块可以完全不用自己写，可以使用别人的模块，按照人家提供的方式接入到人家的评论系统就可以，比如disqus。而自己的网站可以全都是静态文件，pelican是个静态文件生成器，可以根据markdown文档生成静态文件，然后直接放到web服务器中就ok了。至于评论模块，本来还需要自己在静态文件中接入，而这个功能pelican直接给我做好了，给它个disqus的参数就可以了。nice！  &lt;/p&gt;
&lt;p&gt;回到最开始的问题，博客需要数据库吗？可以需要，至少对于我个人来说，要求达到了，&lt;br /&gt;
第一，支持markdown，为什么，因为用markdown写简单带感，而且利于保存，不然哪天看自己那个有数据库的博客不爽，想重新找个的时候，迁移是个问题；&lt;br /&gt;
第二，可以评论，直接用别人的东西，自己基本不用开发和维护，注册账号就行，顶多个人家再打个广告。  &lt;/p&gt;
&lt;p&gt;仔细想想，其实这种方式更轻便，更有技术的感觉在里面。好处主要有三个。&lt;br /&gt;
第一，这种方式更加轻便，好维护，以后云服务器不要了可以使用github packge；&lt;br /&gt;
第二，因为所有文档的源头都是同一份md文档，而不是从A复制到B,再到C,修改A之后要再复制粘贴2遍；&lt;br /&gt;
第三，评论模块完全不用自己开发，爽！  &lt;/p&gt;
&lt;h1 id="_2"&gt;博客主题&lt;/h1&gt;
&lt;p&gt;博客决定用静态文件生成器根据md文档生成，pelican提供了N多&lt;a href="http://www.pelicanthemes.com"&gt;主题&lt;/a&gt;，我选择的是foundation-default-colours,然后稍作修改自己用了。&lt;br /&gt;
对于主题，我的要求是，得有category，tag和按时间归档的功能，这几个功能这个主题都有，只是样式不敢恭维，我参考其他主题的样式做了小小的修改。我最喜欢的是这个主题中的tag的展示方式，很多主题中都是一个列表从上到下，这个是一行一行空格分割，紧凑排列的，这样可以展示更多的tag，方便查找。但我担心后来的tag会很多，所以改了下，加了个tag的展示页面。具体怎么折腾pelican的主题以及pelican本身，还得google和查看官方文档，这里说不全的。  &lt;/p&gt;
&lt;h1 id="_3"&gt;告一段落吧&lt;/h1&gt;
&lt;p&gt;因为总是把心思花在折腾博客上，而且不在内容，有点买椟还珠的感觉。这并不是说博客的选择不重要，而是觉得内容才是更重要的。我做这一切着不过是想给自己一个喜欢的写博客的环境，如果环境都不喜欢，一看到就厌恶，这事情怎么进行下去。  &lt;br /&gt;
不过，现在也该满意了，功能也都有了。  &lt;br /&gt;
本来还想对样式再做进一步修改的，但觉得这样已经够了，太花了不好，容易分心，而且我也不擅长也不打算往前端发展。简洁美比较适合我。  &lt;br /&gt;
说不折腾，把重心移到内容上，结果还是折腾了，又这么晚，真心不想折腾了，这个主题还不错，不花哨，bootstrap流的主题都比较好看，但不一定适合我，我觉得这个主题笔记适合我。  &lt;br /&gt;
今天加上了百度代码的抓取，对归档那一块的样式做了些修改，自我感觉良好。但我不是做前端的啊。  &lt;br /&gt;
我控制不住啊～怎么办啊～  &lt;br /&gt;
又改了几下样式，主要是针对归档的，可以点击日期跳转到对应的年或者月的归档去。  &lt;br /&gt;
还有就是嫁了tag cloud。  &lt;br /&gt;
应该不会再折腾了吧。  &lt;br /&gt;
删光了配置中其他主题的配置，专心弄现在这个这个主题了。  &lt;br /&gt;
决定把这个主题给做稳了。    &lt;/p&gt;
&lt;h1 id="todo"&gt;TODO&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;搜索功能，暂时不打算加，因为博客少，而且更主要的是想写给自己看，不然看了忘了不好。这个功能如果没现成的东西，做起来感觉还是有的麻烦的;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;分页，等博客多了再说，看到有些主题中有这个功能，到时候抄过来&lt;/del&gt;(done,主题自带，只是之前没发现，已搞定)；  &lt;/li&gt;
&lt;li&gt;文章页面下一篇的功能，感觉别人不会用自己也不会用的功能，有了比鸡肋还不如，没用又有点难受，为什么要在todo里面，因为我犯贱啊。  &lt;/li&gt;
&lt;li&gt;tags页面样式修改，等tag足够多再说吧。  &lt;/li&gt;
&lt;li&gt;&lt;del&gt;pelican将md转成markdown的时候，对有序列表没做转换，不知道怎么搞的&lt;/del&gt;(done 写列表前记得空行)&lt;/li&gt;
&lt;li&gt;&lt;del&gt;加回到顶部功能&lt;/del&gt; (done)&lt;/li&gt;
&lt;/ol&gt;</summary><category term="blog"></category><category term="fun"></category><category term="play"></category></entry><entry><title>软链接，硬链接</title><link href="http://henrychenv.github.io/soft-and-hard-link.html" rel="alternate"></link><updated>2016-01-31T18:57:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-01-30:soft-and-hard-link.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;概论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;笔记&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;知识点&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#inode"&gt;inode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hard-link"&gt;创建hard link命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hard-link_1"&gt;hard link 特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#inode_1"&gt;测试文件系统 inode 耗尽但仍有磁盘空间的情景&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#soft-link"&gt;soft link 特性&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#find"&gt;使用命令 find 查找软链接与硬链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="_1"&gt;概论&lt;/h1&gt;
&lt;p&gt;玩linux肯定得遇到hard link和soft(symbolic)link的问题，之前看的文章感觉不够深入，这次找到了篇好文。
详情点击&lt;a href="http://www.ibm.com/developerworks/cn/linux/l-cn-hardandsymb-links/index.html"&gt;传送门&lt;/a&gt;,以下仅为学习笔记.&lt;/p&gt;
&lt;h1 id="_2"&gt;笔记&lt;/h1&gt;
&lt;h2 id="_3"&gt;知识点&lt;/h2&gt;
&lt;h3 id="inode"&gt;inode&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;我们知道文件都有文件名与数据，这在 Linux 上被分成两个部分：用户数据 (user data) 与元数据 (metadata)。用户数据，即文件数据块 (data block)，数据块是记录文件真实内容的地方；而元数据则是文件的附加属性，如文件大小、创建时间、所有者等信息。在 Linux 中，元数据中的 inode 号（inode 是文件元数据的一部分但其并不包含文件名，inode 号即索引节点号）才是文件的唯一标识而非文件名。文件名仅是为了方便人们的记忆和使用，系统或程序通过 inode 号寻找正确的文件数据块。
&lt;img alt="通过文件名打开文件" src="/images/sysops/find-file-by-filename.jpg" /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# stat /home/harris/source/glibc-2.16.0.tar.xz &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;File: /home/harris/source/glibc-2.16.0.tar.xz&lt;/span&gt;
&lt;span class="code-line"&gt;Size: &lt;span class="m"&gt;9990512&lt;/span&gt;      Blocks: &lt;span class="m"&gt;19520&lt;/span&gt;      IO Block: &lt;span class="m"&gt;4096&lt;/span&gt;   regular file &lt;/span&gt;
&lt;span class="code-line"&gt;    Device: 807h/2055d      Inode: &lt;span class="m"&gt;2485677&lt;/span&gt;     Links: &lt;span class="m"&gt;1&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;Access: &lt;span class="o"&gt;(&lt;/span&gt;0600/-rw-------&lt;span class="o"&gt;)&lt;/span&gt;  Uid: &lt;span class="o"&gt;(&lt;/span&gt; 1000/  harris&lt;span class="o"&gt;)&lt;/span&gt;   Gid: &lt;span class="o"&gt;(&lt;/span&gt; 1000/  harris&lt;span class="o"&gt;)&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    ... &lt;/span&gt;
&lt;span class="code-line"&gt;    ... &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# mv /home/harris/source/glibc-2.16.0.tar.xz /home/harris/Desktop/glibc.tar.xz &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ls -i -F /home/harris/Desktop/glibc.tar.xz &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;2485677&lt;/span&gt; /home/harris/Desktop/glibc.tar.xz &lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="hard-link"&gt;创建hard link命令&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;link oldfile newfile &lt;/span&gt;
&lt;span class="code-line"&gt;ln oldfile newfile&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="hard-link_1"&gt;hard link 特性&lt;/h3&gt;
&lt;p&gt;hard link 是有着相同incode的不同名文件
+ 文件有相同的incode和data block；
+ 只能对已经存在的文件创建；
+ 不能交叉文件系统
+ 不能对目录创建，仅可对文件
+ 删除一个hard link文件不影响其他相同incode号文件&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ls -li &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;total &lt;span class="m"&gt;0&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;// 只能对已存在的文件创建硬连接&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# link old.file hard.link &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;link: cannot create link &lt;span class="s1"&gt;&amp;#39;hard.link&amp;#39;&lt;/span&gt; to &lt;span class="s1"&gt;&amp;#39;old.file&amp;#39;&lt;/span&gt;: No such file or directory &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# echo &amp;quot;This is an original file&amp;quot; &amp;gt; old.file &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# cat old.file &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;This is an original file &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# stat old.file &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;File: &lt;span class="s1"&gt;&amp;#39;old.file&amp;#39;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;Size: &lt;span class="m"&gt;25&lt;/span&gt;           Blocks: &lt;span class="m"&gt;8&lt;/span&gt;          IO Block: &lt;span class="m"&gt;4096&lt;/span&gt;   regular file &lt;/span&gt;
&lt;span class="code-line"&gt;    Device: 807h/2055d      Inode: &lt;span class="m"&gt;660650&lt;/span&gt;      Links: &lt;span class="m"&gt;2&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;Access: &lt;span class="o"&gt;(&lt;/span&gt;0644/-rw-r--r--&lt;span class="o"&gt;)&lt;/span&gt;  Uid: &lt;span class="o"&gt;(&lt;/span&gt;    0/    root&lt;span class="o"&gt;)&lt;/span&gt;   Gid: &lt;span class="o"&gt;(&lt;/span&gt;    0/    root&lt;span class="o"&gt;)&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    ... &lt;/span&gt;
&lt;span class="code-line"&gt;// 文件有相同的 inode 号以及 data block &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# link old.file hard.link | ls -li &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    total &lt;span class="m"&gt;8&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;660650&lt;/span&gt; -rw-r--r-- &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;25&lt;/span&gt; Sep  &lt;span class="m"&gt;1&lt;/span&gt; 17:44 hard.link &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;660650&lt;/span&gt; -rw-r--r-- &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;25&lt;/span&gt; Sep  &lt;span class="m"&gt;1&lt;/span&gt; 17:44 old.file &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;// 不能交叉文件系统&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ln /dev/input/event5 /root/bfile.txt &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    ln: failed to create hard link &lt;span class="s1"&gt;&amp;#39;/root/bfile.txt&amp;#39;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&amp;gt; &lt;span class="s1"&gt;&amp;#39;/dev/input/event5&amp;#39;&lt;/span&gt;: &lt;/span&gt;
&lt;span class="code-line"&gt;    Invalid cross-device link &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# df -i --print-type &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    Filesystem     Type       Inodes  IUsed    IFree IUse% Mounted on &lt;/span&gt;
&lt;span class="code-line"&gt;    /dev/sda7      ext4      &lt;span class="m"&gt;3147760&lt;/span&gt; &lt;span class="m"&gt;283483&lt;/span&gt;  &lt;span class="m"&gt;2864277&lt;/span&gt;   10% / &lt;/span&gt;
&lt;span class="code-line"&gt;    udev           devtmpfs   &lt;span class="m"&gt;496088&lt;/span&gt;    &lt;span class="m"&gt;553&lt;/span&gt;   &lt;span class="m"&gt;495535&lt;/span&gt;    1% /dev &lt;/span&gt;
&lt;span class="code-line"&gt;    tmpfs          tmpfs      &lt;span class="m"&gt;499006&lt;/span&gt;    &lt;span class="m"&gt;491&lt;/span&gt;   &lt;span class="m"&gt;498515&lt;/span&gt;    1% /run &lt;/span&gt;
&lt;span class="code-line"&gt;    none           tmpfs      &lt;span class="m"&gt;499006&lt;/span&gt;      &lt;span class="m"&gt;3&lt;/span&gt;   &lt;span class="m"&gt;499003&lt;/span&gt;    1% /run/lock &lt;/span&gt;
&lt;span class="code-line"&gt;    none           tmpfs      &lt;span class="m"&gt;499006&lt;/span&gt;     &lt;span class="m"&gt;15&lt;/span&gt;   &lt;span class="m"&gt;498991&lt;/span&gt;    1% /run/shm &lt;/span&gt;
&lt;span class="code-line"&gt;    /dev/sda6      fuseblk  &lt;span class="m"&gt;74383900&lt;/span&gt;   &lt;span class="m"&gt;4786&lt;/span&gt; &lt;span class="m"&gt;74379114&lt;/span&gt;    1% /media/DiskE &lt;/span&gt;
&lt;span class="code-line"&gt;    /dev/sda8      fuseblk  &lt;span class="m"&gt;29524592&lt;/span&gt;  &lt;span class="m"&gt;19939&lt;/span&gt; &lt;span class="m"&gt;29504653&lt;/span&gt;    1% /media/DiskF &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;// 不能对目录进行创建硬连接&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# mkdir -p old.dir/test &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ln old.dir/ hardlink.dir &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    ln: &lt;span class="s1"&gt;&amp;#39;old.dir/&amp;#39;&lt;/span&gt;: hard link not allowed &lt;span class="k"&gt;for&lt;/span&gt; directory &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ls -iF &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;660650&lt;/span&gt; hard.link  &lt;span class="m"&gt;657948&lt;/span&gt; old.dir/  &lt;span class="m"&gt;660650&lt;/span&gt; old.file&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="inode_1"&gt;测试文件系统 inode 耗尽但仍有磁盘空间的情景&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# dd if=/dev/zero of=mo.img bs=5120k count=1 &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ls -lh mo.img &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; root root 5.0M Sep  &lt;span class="m"&gt;1&lt;/span&gt; 17:54 mo.img &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# mkfs -t ext4  -F ./mo.img &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;... &lt;/span&gt;
&lt;span class="code-line"&gt;    OS type: Linux &lt;/span&gt;
&lt;span class="code-line"&gt;    Block &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;Fragment &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;log&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0&lt;span class="o"&gt;)&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;Stride&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blocks, Stripe &lt;span class="nv"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; blocks &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;1280&lt;/span&gt; inodes, &lt;span class="m"&gt;5120&lt;/span&gt; blocks &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="m"&gt;256&lt;/span&gt; blocks &lt;span class="o"&gt;(&lt;/span&gt;5.00%&lt;span class="o"&gt;)&lt;/span&gt; reserved &lt;span class="k"&gt;for&lt;/span&gt; the super user &lt;/span&gt;
&lt;span class="code-line"&gt;    ... &lt;/span&gt;
&lt;span class="code-line"&gt;    ... &lt;/span&gt;
&lt;span class="code-line"&gt;    Writing superblocks and filesystem accounting information: &lt;span class="k"&gt;done&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# mount -o loop ./mo.img /mnt &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# cat /mnt/inode_test.sh &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#!/bin/bash &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="o"&gt;((&lt;/span&gt;&lt;span class="nv"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="p"&gt;;&lt;/span&gt; i++&lt;span class="o"&gt;))&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;do&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt; -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;  &lt;span class="s2"&gt;&amp;quot;This is file_&lt;/span&gt;$&lt;span class="s2"&gt;i&amp;quot;&lt;/span&gt; &amp;gt; file_$i &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;done&lt;/span&gt; &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# ./inode_test.sh &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    ./inode_test.sh: line 6: file_1269: No space left on device &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# df -iT /mnt/; du -sh /mnt/ &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    Filesystem     Type Inodes IUsed IFree IUse% Mounted on &lt;/span&gt;
&lt;span class="code-line"&gt;    /dev/loop0     ext4   &lt;span class="m"&gt;1280&lt;/span&gt;  &lt;span class="m"&gt;1280&lt;/span&gt;     &lt;span class="m"&gt;0&lt;/span&gt;  100% /mnt &lt;/span&gt;
&lt;span class="code-line"&gt;    1.3M    /mnt/ &lt;span class="o"&gt;]&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="soft-link"&gt;soft link 特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;soft link有自己的文件属性及权限&lt;/li&gt;
&lt;li&gt;可以对不存在的文件或目录创建软链接&lt;/li&gt;
&lt;li&gt;可交叉文件系统&lt;/li&gt;
&lt;li&gt;可以对文件或目录创建&lt;/li&gt;
&lt;li&gt;删除soft link 不影响原文件，删除原文件soft link会变成死链&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="链接访问" src="/images/sysops/visit-soft-link.jpg" title="链接访问" /&gt;&lt;/p&gt;
&lt;h3 id="find"&gt;使用命令 find 查找软链接与硬链接&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;// 查找在路径 /home 下的文件 data.txt 的软链接&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# find /home -lname data.txt &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test2/a &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;// 查看路径 /home 有相同 inode 的所有硬链接&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# find /home -samefile /home/harris/debug/test3/old.file &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test3/hard.link &lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test3/old.file &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# find /home -inum 660650 &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test3/hard.link &lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test3/old.file &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;// 列出路径 /home/harris/debug/ 下的所有软链接文件&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# find /home/harris/debug/ -type l -ls &lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;656662&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; harris harris &lt;span class="m"&gt;1&lt;/span&gt; Sep &lt;span class="m"&gt;1&lt;/span&gt; 14:37 /home/harris/debug/test2/b -&amp;gt; a&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;656627&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; harris harris &lt;span class="m"&gt;8&lt;/span&gt; Sep &lt;span class="m"&gt;1&lt;/span&gt; 14:37 /home/harris/debug/test2/a -&amp;gt; &lt;/span&gt;
&lt;span class="code-line"&gt;data.txt&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;789467&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt; lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;8&lt;/span&gt; Sep &lt;span class="m"&gt;1&lt;/span&gt; 18:00 /home/harris/debug/test/soft.link -&amp;gt; old.file &lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="m"&gt;789496&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt; lrwxrwxrwx   &lt;span class="m"&gt;1&lt;/span&gt; root     root            &lt;span class="m"&gt;7&lt;/span&gt; Sep  &lt;span class="m"&gt;1&lt;/span&gt; 18:01 &lt;/span&gt;
&lt;span class="code-line"&gt;/home/harris/debug/test/soft.link.dir -&amp;gt; old.dir&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="_4"&gt;问题&lt;/h2&gt;
&lt;p&gt;Q1. 对于作者提到的“若系统允许对目录创建硬链接，则会产生目录环。” 表示怀疑，
如果这是不能对目录创建硬链接的原因，那么对目录创建软链接也会存在这个问题，按你的意思，这种环只会在对目录创建硬链接(假设可以)的时候出现&lt;/p&gt;</summary><category term="system"></category><category term="hard-link"></category><category term="soft-link"></category><category term="symbolic-link"></category></entry><entry><title>[TED] Embrace The Near Win</title><link href="http://henrychenv.github.io/ted-embrace-the-near-win.html" rel="alternate"></link><updated>2016-01-30T02:00:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-01-20:ted-embrace-the-near-win.html</id><summary type="html">&lt;p&gt;I feel so fortunate that my first job was working at the Museum of Modern Art on a retrospective of painter Elizabeth Murray. I learned so much from her. After the curator Robert Storr selected all the paintings from her lifetime body of work, I loved looking at the paintings from the 1970s. There were some motifs and elements that would come up again later in her life. I remember asking her what she thought of those early works. If you didn&amp;rsquo;t know they were hers, you might not have been able to guess.She told me that a few didn&amp;rsquo;t quite meet her own mark for what she wanted them to be. One of the works, in fact, so didn&amp;rsquo;t meet her mark, she had set it out in the trash in her studio, and her neighbor had taken it because she saw its value.&lt;/p&gt;
&lt;p&gt;In that moment, my view of success and creativity changed. I realized that success is a moment, but what we&amp;rsquo;re always celebrating is creativity and mastery. But this is the thing: What gets us to convert success into mastery? This is a question I&amp;rsquo;ve long asked myself. I think it comes when we start to valuethe gift of a near win.&lt;/p&gt;
&lt;p&gt;I started to understand this when I went on one cold May day to watch a set of varsity archers, all women as fate would have it, at the northern tip of Manhattan at Columbia&amp;rsquo;s Baker Athletics Complex. I wanted to see what&amp;rsquo;s called archer&amp;rsquo;s paradox, the idea that in order to actually hit your target, you have to aim at something slightly skew from it. I stood and watched as the coach drove up these women in this gray van, and they exited with this kind of relaxed focus. One held a half-eaten ice cream cone in one handand arrows in the left with yellow fletching. And they passed me and smiled, but they sized me up as theymade their way to the turf, and spoke to each other not with words but with numbers, degrees, I thought,positions for how they might plan to hit their target. I stood behind one archer as her coach stood in between us to maybe assess who might need support, and watched her, and I didn&amp;rsquo;t understand how even one was going to hit the ten ring. The ten ring from the standard 75-yard distance, it looks as small as a matchstick tip held out at arm&amp;rsquo;s length. And this is while holding 50 pounds of draw weight on each shot. She first hit a seven, I remember, and then a nine, and then two tens, and then the next arrow didn&amp;rsquo;t even hit the target. And I saw that gave her more tenacity, and she went after it again and again. For three hours this went on. At the end of the practice, one of the archers was so taxed that she lied out on the ground just star-fished, her head looking up at the sky, trying to find what T.S. Eliot might call that still point of the turning world.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s so rare in American culture, there&amp;rsquo;s so little that&amp;rsquo;s vocational about it anymore, to look at what doggedness looks like with this level of exactitude, what it means to align your body posture for three hours in order to hit a target, pursuing a kind of excellence in obscurity. But I stayed because I realized I was witnessing what&amp;rsquo;s so rare to glimpse, that difference between success and mastery.&lt;/p&gt;
&lt;p&gt;So success is hitting that ten ring, but mastery is knowing that it means nothing if you can&amp;rsquo;t do it again and again. Mastery is not just the same as excellence, though. It&amp;rsquo;s not the same as success, which I see as an event, a moment in time, and a label that the world confers upon you. Mastery is not a commitment to a goal but to a constant pursuit. What gets us to do this, what get us to forward thrust more is to value the near win. How many times have we designated something a classic, a masterpiece even, while its creator considers it hopelessly unfinished, riddled with difficulties and flaws, in other words, a near win?Elizabeth Murray surprised me with her admission about her earlier paintings. Painter Paul Cézanne so often thought his works were incomplete that he would deliberately leave them aside with the intention of picking them back up again, but at the end of his life, the result was that he had only signed 10 percent of his paintings. His favorite novel was &amp;ldquo;The [Unknown] Masterpiece&amp;rdquo; by Honoré de Balzac, and he felt the protagonist was the painter himself. Franz Kafka saw incompletion when others would find only works to praise, so much so that he wanted all of his diaries, manuscripts, letters and even sketches burned upon his death. His friend refused to honor the request, and because of that, we now have all the works we now do by Kafka: &amp;ldquo;America,&amp;rdquo; &amp;ldquo;The Trial&amp;rdquo; and &amp;ldquo;The Castle,&amp;rdquo; a work so incomplete it even stops mid-sentence.&lt;/p&gt;
&lt;p&gt;The pursuit of mastery, in other words, is an ever-onward almost. &amp;ldquo;Lord, grant that I desire more than I can accomplish,&amp;rdquo; Michelangelo implored, as if to that Old Testament God on the Sistine Chapel, and he himself was that Adam with his finger outstretched and not quite touching that God&amp;rsquo;s hand.&lt;/p&gt;
&lt;p&gt;Mastery is in the reaching, not the arriving. It&amp;rsquo;s in constantly wanting to close that gap between where you are and where you want to be. Mastery is about sacrificing for your craft and not for the sake of crafting your career. How many inventors and untold entrepreneurs live out this phenomenon? We see it even in the life of the indomitable Arctic explorer Ben Saunders, who tells me that his triumphs are not merely the result of a grand achievement, but of the propulsion of a lineage of near wins.&lt;/p&gt;
&lt;p&gt;We thrive when we stay at our own leading edge. It&amp;rsquo;s a wisdom understood by Duke Ellington, who said that his favorite song out of his repertoire was always the next one, always the one he had yet to compose. Part of the reason that the near win is inbuilt to mastery is because the greater our proficiency,the more clearly we might see that we don&amp;rsquo;t know all that we thought we did. It&amp;rsquo;s called the Dunning–Kruger effect. The Paris Review got it out of James Baldwin when they asked him, &amp;ldquo;What do you think increases with knowledge?&amp;rdquo; and he said, &amp;ldquo;You learn how little you know.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;Success motivates us, but a near win can propel us in an ongoing quest. One of the most vivid examples of this comes when we look at the difference between Olympic silver medalists and bronze medalists after a competition. Thomas Gilovich and his team from Cornell studied this difference and found that the frustration silver medalists feel compared to bronze, who are typically a bit more happy to have just not received fourth place and not medaled at all, gives silver medalists a focus on follow-up competition. We see it even in the gambling industry that once picked up on this phenomenon of the near win and created these scratch-off tickets that had a higher than average rate of near wins and so compelled people to buy more tickets that they were called heart-stoppers, and were set on a gambling industry set of abuses in Britain in the 1970s. The reason the near win has a propulsion is because it changes our view of the landscape and puts our goals, which we tend to put at a distance, into more proximate vicinity to where we stand. If I ask you to envision what a great day looks like next week, you might describe it in more general terms. But if I ask you to describe a great day at TED tomorrow, you might describe it with granular, practical clarity. And this is what a near win does. It gets us to focus on what, right now, we plan to do to address that mountain in our sights. It&amp;rsquo;s Jackie Joyner-Kersee, who in 1984 missed taking the gold in the heptathlon by one third of a second, and her husband predicted that would give her the tenacity she needed in follow-up competition. In 1988, she won the gold in the heptathlon and set a record of 7,291 points, a score that no athlete has come very close to since.&lt;/p&gt;
&lt;p&gt;We thrive not when we&amp;rsquo;ve done it all, but when we still have more to do. I stand here thinking and wondering about all the different ways that we might even manufacture a near win in this room, how your lives might play this out, because I think on some gut level we do know this. We know that we thrive when we stay at our own leading edge, and it&amp;rsquo;s why the deliberate incomplete is inbuilt into creation myths. In Navajo culture, some craftsmen and women would deliberately put an imperfection in textiles and ceramics. It&amp;rsquo;s what&amp;rsquo;s called a spirit line, a deliberate flaw in the pattern to give the weaver or maker a way out, but also a reason to continue making work. Masters are not experts because they take a subject to its conceptual end. They&amp;rsquo;re masters because they realize that there isn&amp;rsquo;t one.&lt;/p&gt;
&lt;p&gt;Now it occurred to me, as I thought about this, why the archery coach told me at the end of that practice,out of earshot of his archers, that he and his colleagues never feel they can do enough for their team,never feel there are enough visualization techniques and posture drills to help them overcome those constant near wins. It didn&amp;rsquo;t sound like a complaint, exactly, but just a way to let me know, a kind of tender admission, to remind me that he knew he was giving himself over to a voracious, unfinished paththat always required more.&lt;/p&gt;
&lt;p&gt;We build out of the unfinished idea, even if that idea is our former self. This is the dynamic of mastery.Coming close to what you thought you wanted can help you attain more than you ever dreamed you could. It&amp;rsquo;s what I have to imagine Elizabeth Murray was thinking when I saw her smiling at those early paintings one day in the galleries. Even if we created utopias, I believe we would still have the incomplete. Completion is a goal, but we hope it is never the end.&lt;/p&gt;
&lt;p&gt;Thank you.&lt;/p&gt;</summary><category term="TED"></category><category term="English"></category></entry><entry><title>一月的混沌</title><link href="http://henrychenv.github.io/january-chaos.html" rel="alternate"></link><updated>2015-01-02T12:12:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2016-01-02:january-chaos.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;最近有点烦，烦的原因是我处在人类的一个很烦的进化阶段，不知道算不算进化了，人类本能的进化速度完全赶不上人类社会的进化速度，人类为了在社会中生存，必须按照一些人为规定进行活动，而这些规定往往和本能想背，现在的本能已经完全无法适应当今社会。读《自私的基因》感觉人就是个无意义的存在，和其他生物一样都是为了生存，所做的一切无非都是让基因延续下去，所谓的为了种族的生存大概就是这个意思吧。种族中存在变异，变异是必须的，虽然在环境不变的情况下，变异等于自杀，然而这个数量对于整个种族来说不算什么，是种族给自己的风投，一旦中奖，就靠变异的那一小撮生存继续让基因生存下去了。人体的整个设计都是为了活着，活着时为了传播基因，传播的方式略。有段时间还是挺佩服自杀的人的，也很恐惧抑郁症，因为这些人竟然突破人类的最大本能。&lt;/p&gt;
&lt;p&gt;曾经寻找过人为什么会存在，最后一站找到了基因头上，发现人出现的原因就是那一小段可以自我复制的基因，在保留这段基因的基础上不断完善自己，完善的目的也是为了保护这段基因。其实也算不上是保护，实际上时变异，含有这段基因序列的基因的一部分变异了，然后经过环境的选择，发现某种变异可以使这段基因复制得更多，存在的原因是你存在了，一切都是巧合，变异加选择的结果，一个不断试错的过程。残酷吗？残酷是一种情感，这个过程没有任何情感。总的来说，存在的原因是你存在了。当时觉得这个解释很无法接受又无法反驳，刚接触时我更宁愿相信人类以及人类认识到的宇宙只不过是外星人搭建的实验环境，人类甚至只是一堆一个delete就能删除的数据，一堆纯数据，什么也不是，连小白鼠都算不上。你以为自己是游戏中的英雄，实际上你以为的英雄只是活跃在内存或者死在硬盘上的数据。&lt;/p&gt;
&lt;p&gt;很多人不会去想活着的意义，也没必要去想，想出来了又能怎样呢？更何况从基因的角度看，人类最大的意义就是为了基因的延续而活着，而这个意义是基因赋予的，基因创造你是为了自己的生存。如果你妈和你老婆同时掉水里，你该先救谁？基因告诉你，如果你不会游泳就当别自己下水，老婆能生育就救你老婆，否则救你妈。因为不能生育的老婆并不能帮你完成基因交给你的任务，救了你妈，你妈出于生物的本能会有利于你的生存，从而更有利于你的任务。其实你会发现，除了这个基因给的意义，你的存在并没有意义，至少找不到对于单个个体的意义。所谓的梦想理想有意义吗，你可以追溯下为什么自己会有这样的理想或梦想，发现了吗，不是生来就有，而且都是本能的伪装，伪装了那么多，只是为了基因的延续。所以现在很多人的理想都是做点什么然后有钱，梦想是没做什么也能有钱。如果人类在实现梦想或者理想后没有第二个理想或者梦想出现，实现理想或梦想将是个灾难，因为实现后，你将会发现生命无意义的本质，你将不知所措，一头钻进本能的怀抱，社会将本能的行为大都定义为龌龊的，违法的，道德和法律将会消灭你，你将在膨胀之后死亡。&lt;/p&gt;
&lt;p&gt;人类偏偏又有个大脑，我想本来基因创造这么个精密的东西只是为了增加成活率，但大脑过于强大似乎已经可以反抗本能，这便是一起纠结的源泉。不知道人类的大脑算不算是对本能的补救，但这补救的方式让人好纠结，好烦。做本能要求的事情总有种正在做正确的事情的感觉，而在做理智要求的事情的时候，总有种有人在旁边跟你说，别这么做的感觉。&lt;/p&gt;
&lt;p&gt;书也读了，道理我都懂，然而我并不能做到。&lt;/p&gt;
&lt;p&gt;人类思考的时候，上帝笑不笑我不关心，如果基因会笑，它一定在笑。&lt;/p&gt;</summary><category term="chaos"></category><category term="life"></category><category term="thinking"></category></entry><entry><title>论坛搭建全记录</title><link href="http://henrychenv.github.io/note-for-build-website.html" rel="alternate"></link><updated>2016-01-30T01:53:00+08:00</updated><author><name>Henry Chen</name></author><id>tag:henrychenv.github.io,2015-12-28:note-for-build-website.html</id><summary type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#_1"&gt;概况&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_2"&gt;搭建&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#centos7"&gt;CentOS7&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_3"&gt;系统安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_4"&gt;安装必需的依赖包&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_5"&gt;防火墙&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#mysql"&gt;MySQL&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_6"&gt;安装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_7"&gt;新建用户&amp;amp;权限管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_8"&gt;修改编码配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#_9"&gt;虚拟环境&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_10"&gt;安装步骤:&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#virtualenvvirtualenvwrapperpip"&gt;安装virtualenv和virtualenvwrapper(源码或者pip)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_11"&gt;创建虚拟环境目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#bashrc"&gt;将配置加入~/.bashrc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_12"&gt;测试&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#uwsgi"&gt;uwsgi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#pip"&gt;安装: 无论源码还是pip都很顺利，没什么好说的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_13"&gt;单独测试是否安装成功&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_14"&gt;项目配置文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_15"&gt;启动脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_16"&gt;将脚本添加到系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_17"&gt;验证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#nginx"&gt;nginx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#_18"&gt;源码编译&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_19"&gt;启动脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_20"&gt;添加脚本到系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_21"&gt;验证&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#_22"&gt;网站配置&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#nginxconf"&gt;主配置文件nginx.conf:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#vhost"&gt;vhost 配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;搭了个论坛玩。
以下文字时写给自己看的，首要目的是记录，其次才是得瑟。会有些啰嗦，因为不想写那种从头到位都很顺利跟说明书似的帖子。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="_1"&gt;概况&lt;/h2&gt;
&lt;p&gt;基本思路是LNMP:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;L: CentiOS7
  为什么用7，没什么特别的原因，喜欢7这个数字，CentOS7刚出来的时候就装了个，只是当时电脑配置差，玩得不爽，耿耿于怀，这次顺便了了这个结，当然坑也会有的。为什么不用ubuntu，就ubuntu默认防火墙关闭，CentOS默认防火墙打开这一点就让我不打算用ubuntu了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;N: nginx
  没认真笔记多nginx喝apache，只知道大家现在更偏向于用nginx跑python项目，nginx也有虚拟主机，反向代理的玩法，可以很方便的在一台服务器上搭建多个网站。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;M: MySQL
  被oracle搞去了，因为担心被闭源，所以CentOS7用了由社区维护的MySQL的一个分支，MariaDB，但起起来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;P: python
  用的django框架，论坛直接用的开源软件misago&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="_2"&gt;搭建&lt;/h2&gt;
&lt;h3 id="centos7"&gt;CentOS7&lt;/h3&gt;
&lt;h4 id="_3"&gt;&lt;strong&gt;系统安装&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;直接用的阿里的ECS，创建虚拟机的时候选的CentOS7的镜像。 我觉得用root用户直接搭建环境不好，于是创建了一个管理员账号，以我自己命名，命令:&lt;code&gt;adduser henry -c "Henry Chen"&lt;/code&gt;用户henry在用sudo的时候不需要输入密码，命令:&lt;code&gt;visudo&lt;/code&gt;，会打开一个文件，找到这两行:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="c1"&gt;## Same thing without a password&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;%wheel  &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt;       NOPASSWD: ALL&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;去掉第二行前面的注释(这里已经去掉了),记下wheel这个组，只要在这个组里面的用户，使用sudo都不用输入密码。
将henry加入到这个组中:&lt;code&gt;usermod -a -G henry wheel&lt;/code&gt;。
安装必要的软件: git, etc&lt;/p&gt;
&lt;h4 id="_4"&gt;&lt;strong&gt;安装必需的依赖包&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;sudo yum install libjpeg-turbo-devel zlib-devel python-devel libfreehand-devel python-imgcreate&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_5"&gt;&lt;strong&gt;防火墙&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;这个镜像用起来跟本地不一样，本地安装的CentOS7种，防火墙会阻止几乎全部端口，而ECS中只要你用到了哪个端口，它会帮你自动打开这个端口，不用自己操作防火墙。本地做实验的时候需要操作防火墙，需要以下命令:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;firewall-cmd —list-port&lt;/span&gt;
&lt;span class="code-line"&gt;firewall-cmd --zone&lt;span class="o"&gt;=&lt;/span&gt;dmz --add-port&lt;span class="o"&gt;=&lt;/span&gt;80/tcp&lt;/span&gt;
&lt;span class="code-line"&gt;firewall-cmd --zone&lt;span class="o"&gt;=&lt;/span&gt;dmz --add-port&lt;span class="o"&gt;=&lt;/span&gt;3306/tcp&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;若要永久生效方法在后面加上&lt;code&gt;--permanent&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这是我遇到的第一个坑，装上mysql，添加好用户和权限后却不能登录，google出来的方向都是让我去改iptables，但CentOS7中将iptables换成了firewall，有网友建议卸载firewall，安装iptables，但我觉得人家用了firewall总是有他的道理的，于是决定用firewall。&lt;/p&gt;
&lt;h3 id="mysql"&gt;MySQL&lt;/h3&gt;
&lt;h4 id="_6"&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;因为觉得数据库能用就行，没必要源码编译，于是想直接用源里面的，但CentOS7的源中并没有自带mysql，而是MariaDB，这是由社区维护的一个MySQL的分支，但据说启动后查看进程看到的是mariadb不是mysql，有点怪怪的，于是我去官方找了个源，然后安装。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm&lt;/span&gt;
&lt;span class="code-line"&gt;sudo yum install mysql-community-server&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在安装完成后会看到replaced mariadb的信息，这个有意思。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;初次安装mysql，root用户没有密码，为了安全起见，最好设置下密码&lt;br /&gt;
&lt;code&gt;set password for 'root'@'localhost' =password('password');&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="_7"&gt;&lt;strong&gt;新建用户&amp;amp;权限管理&lt;/strong&gt;&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;create user &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt; identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;create user &lt;span class="s1"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;@&lt;span class="s1"&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database.* to username@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;grant all privileges on database.* to username@&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;identified by &lt;span class="s1"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_8"&gt;&lt;strong&gt;修改编码配置&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在&lt;code&gt;/etc/my.cnf&lt;/code&gt;中加上如下配置:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;[mysql]&lt;/span&gt;
&lt;span class="code-line"&gt;default-character-set =utf8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里的字符编码必须和&lt;code&gt;/usr/share/mysql/charsets/Index.xml&lt;/code&gt;中一致。
创建数据库的时候也需要加上字符编码的选项: &lt;code&gt;create database xxx default character set utf8;&lt;/code&gt;
参考: &lt;a href="http://www.cnblogs.com/starof/p/4680083.html"&gt;centos7 mysql数据库安装和配置&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="_9"&gt;虚拟环境&lt;/h3&gt;
&lt;h4 id="_10"&gt;安装步骤:&lt;/h4&gt;
&lt;h5 id="virtualenvvirtualenvwrapperpip"&gt;安装virtualenv和virtualenvwrapper(源码或者pip)&lt;/h5&gt;
&lt;h5 id="_11"&gt;创建虚拟环境目录&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkdir $HOME/.virtualenvs&lt;/code&gt;&lt;/p&gt;
&lt;h5 id="bashrc"&gt;将配置加入~/.bashrc&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;$HOME/.virtualenvs&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="_12"&gt;测试&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;mkvirtualenv bookbbs&lt;/code&gt;，没问题就ok&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考:&lt;a href="http://liuzhijun.iteye.com/blog/1872241"&gt;Python 虚拟环境:Virtualenv&lt;/a&gt;
   此时就可先在虚拟环境中安装好所需的依赖，然后把项目用sudo python manage.py runserver 0.0.0.0:80的形式跑起来了，我在做到这一步的时候是先把项目跑起来的，因为没在CentOS7上玩过，怕跑不起来，所以想先在这一步看看跑起来的效果如何。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="uwsgi"&gt;uwsgi&lt;/h3&gt;
&lt;p&gt;因为是所有项目都要用的，所以不该放在某个虚拟环境中，应该在虚拟环境外安装，如果不是root则需要sudo的权限。然后需要找一个uwsgi的配置文件，以及启动脚本，可以不用启动脚本，自己将启动命令加到开机启动的脚本中，但还是觉得启动脚本的方式方便管理些。&lt;/p&gt;
&lt;h4 id="pip"&gt;安装: 无论源码还是pip都很顺利，没什么好说的&lt;/h4&gt;
&lt;h4 id="_13"&gt;单独测试是否安装成功&lt;/h4&gt;
&lt;p&gt;新建test.py文件，内容如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="n"&gt;start_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;200 OK&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;text/html&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)])&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;然后在终端运行: &lt;code&gt;uwsgi --http :8001 --wsgi-file test.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在浏览器内输入:&lt;code&gt;http://127.0.0.1:8001&lt;/code&gt;(视情况更改ip)，看是否有&lt;code&gt;“Hello World”&lt;/code&gt;输出，若没有输出，检查安装过程。&lt;/p&gt;
&lt;h4 id="_14"&gt;项目配置文件&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;[uwsgi]&lt;/span&gt;
&lt;span class="code-line"&gt;socket = /path/to/socket&lt;/span&gt;
&lt;span class="code-line"&gt;#socket = 127.0.0.1:8989&lt;/span&gt;
&lt;span class="code-line"&gt;#plugin = python&lt;/span&gt;
&lt;span class="code-line"&gt;wsgi-file = /path/to/project/wsgi.py&lt;/span&gt;
&lt;span class="code-line"&gt;processes = 2&lt;/span&gt;
&lt;span class="code-line"&gt;master = true&lt;/span&gt;
&lt;span class="code-line"&gt;max-requests = 5000&lt;/span&gt;
&lt;span class="code-line"&gt;daemonize = /path/to/log&lt;/span&gt;
&lt;span class="code-line"&gt;logfile-chmod = 644&lt;/span&gt;
&lt;span class="code-line"&gt;pidfile = /path/to/pid&lt;/span&gt;
&lt;span class="code-line"&gt;limit-as = 1000&lt;/span&gt;
&lt;span class="code-line"&gt;enable-threads = true&lt;/span&gt;
&lt;span class="code-line"&gt;vacuum = true&lt;/span&gt;
&lt;span class="code-line"&gt;log-maxsize = 40960000&lt;/span&gt;
&lt;span class="code-line"&gt;threads = 2&lt;/span&gt;
&lt;span class="code-line"&gt;virtualenv = /path/to/virtualenv&lt;/span&gt;
&lt;span class="code-line"&gt;uid = 1000  # 运行的用户&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_15"&gt;启动脚本&lt;/h4&gt;
&lt;p&gt;没在网上找到个满意的，所以改造了下，这个脚步目前只能启动uwsgi进程，但是没法杀进程。启动后，指定目录下的项目配置文件如果发生改变，会自动重启相应进程(uwsgi支持通过&amp;ndash;emperor制定配置文件目录，如果配置文件发生改变，会自动重启相应进程).
以下是脚本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# chkconfig:   - 90 15&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# wsgI init Script&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# processname: uwsgi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# description: Used to run python and wsgi web applciations.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# author: Miguel Clara (miguelmclara@gmail.com)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/rc.d/init.d/functions&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# vars&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;###########################&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/path/to/uwsgi &lt;span class="o"&gt;(&lt;/span&gt;which uwsgi&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;desc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;uWSGI&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;daemoN_OPTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;--emperor /path/to/uwsgi/configs &amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# Change this if needed!&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;lockfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/path/to/uwsgi.lock&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;start &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  daemon $PROG &lt;span class="nv"&gt;$DAE&lt;/span&gt;MON_OPTS&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;stop &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  killproc $PROG&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;reload &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Reloading &lt;/span&gt;$&lt;span class="s2"&gt;NAME&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  killproc $PROG -HUP&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nv"&gt;retVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;restart &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status &lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  status $PROG&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status_q&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  rh_status &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in&lt;/span&gt;
&lt;span class="code-line"&gt;  start&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; ! pidof $PROG &amp;gt;/dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n&lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC is already started...\n&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt; &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  stop&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;if&lt;/span&gt; pidof $PROG &amp;gt;/dev/null&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; -e &lt;span class="s2"&gt;&amp;quot;\n&lt;/span&gt;&lt;span class="nv"&gt;$DE&lt;/span&gt;&lt;span class="s2"&gt;SC can not be stoped because its not running...\n&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  restart&lt;span class="p"&gt;|&lt;/span&gt;force-reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  status&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  *&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|restart|reload|force-reload|status}&amp;quot;&lt;/span&gt; &amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;exit&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_16"&gt;将脚本添加到系统&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;cp this_script /etc/init.d/uwsgi&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig —add uswgi&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig uwsgi on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_17"&gt;验证&lt;/h4&gt;
&lt;p&gt;重启服务器，查看进程是否存在。重启不仅是为了验证是否开机自启动，如果不重启可能会遇到很奇怪的问题，比如不知道什么东西启动了进程，杀业杀不完。&lt;/p&gt;
&lt;h3 id="nginx"&gt;nginx&lt;/h3&gt;
&lt;h4 id="_18"&gt;源码编译&lt;/h4&gt;
&lt;p&gt;版本: nginx-1.8.0.tar.gz.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;./configure --prefix&lt;span class="o"&gt;=&lt;/span&gt;/home/henry/softwares/nginx &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --user&lt;span class="o"&gt;=&lt;/span&gt;henry &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --group&lt;span class="o"&gt;=&lt;/span&gt;henry &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-pcre&lt;span class="o"&gt;=&lt;/span&gt;/home/henry/packages/pcre-8.37 &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_realip_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_stub_status_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_gzip_static_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_stub_status_module &lt;span class="se"&gt;\&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    --with-http_ssl_module&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;make&lt;/span&gt;
&lt;span class="code-line"&gt;make install&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_19"&gt;启动脚本&lt;/h4&gt;
&lt;p&gt;init.d的脚本:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span class="ch"&gt;#!/bin/sh&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# nginx - this script starts and stops the nginx daemon&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# chkconfig:   - 85 15&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# description:  NGINX is an HTTP(S) server, HTTP(S) reverse \&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;#               proxy and IMAP/POP3 proxy server&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# processname: nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# config:      /home/henry/softwares/nginx/conf/nginx.conf&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# config:      /etc/sysconfig/nginx&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# pidfile:     /home/henry/softwares/nginx/logs/nginx.pid&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Source function library.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/rc.d/init.d/functions&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Source networking configuration.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;. /etc/sysconfig/network&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# Check that networking is up.&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;NETWORKING&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;no&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;nginx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/sbin/nginx&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;prog&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename $nginx&lt;span class="k"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;NGINX_CONF_FILE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/conf/nginx.conf&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;[&lt;/span&gt; -f /etc/sysconfig/nginx &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /etc/sysconfig/nginx&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="nv"&gt;lockfile&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/henry/softwares/nginx/subsys/nginx.lock&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;make_dirs&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="c1"&gt;# make required directories&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;$nginx -V 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;configure arguments:&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sed &lt;span class="s1"&gt;&amp;#39;s/[^*]*--user=\([^ ]*\).*/\1/g&amp;#39;&lt;/span&gt; -&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; -z &lt;span class="s2"&gt;&amp;quot;`grep &lt;/span&gt;$&lt;span class="s2"&gt;user /etc/passwd`&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       useradd -M -s /bin/nologin $user&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="nv"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;$nginx -V 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;configure arguments:&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;for&lt;/span&gt; opt in $options&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; $opt &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s1"&gt;&amp;#39;.*-temp-path&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="nv"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; $opt &lt;span class="p"&gt;|&lt;/span&gt; cut -d &lt;span class="s2"&gt;&amp;quot;=&amp;quot;&lt;/span&gt; -f 2&lt;span class="sb"&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt; ! -d &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;$&lt;span class="s2"&gt;value&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;then&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               &lt;span class="c1"&gt;# echo &amp;quot;creating&amp;quot; $value&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;               mkdir -p $value &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; chown -R $user $value&lt;/span&gt;
&lt;span class="code-line"&gt;           &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;       &lt;span class="k"&gt;fi&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   &lt;span class="k"&gt;done&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;start&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; -x $nginx &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; -f $NGINX_CONF_FILE &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt;    make_dirs&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Starting &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    daemon $nginx -c $NGINX_CONF_FILE&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; touch $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;stop&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Stopping &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    killproc $prog -QUIT&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;retval&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="o"&gt;[&lt;/span&gt; $retval -eq &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -f $lockfile&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;return&lt;/span&gt; $retval&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;restart&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;/span&gt;
&lt;span class="code-line"&gt;    sleep 1&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    configtest &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt; -n $&lt;span class="s2"&gt;&amp;quot;Reloading &lt;/span&gt;$&lt;span class="s2"&gt;prog: &amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    killproc $nginx -HUP&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nv"&gt;RETVAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="nb"&gt;echo&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;force_reload&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    restart&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;configtest&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  $nginx -t -c $NGINX_CONF_FILE&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    status $prog&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;rh_status_q&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    rh_status &amp;gt;/dev/null 2&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; in&lt;/span&gt;
&lt;span class="code-line"&gt;    start&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    stop&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    restart&lt;span class="p"&gt;|&lt;/span&gt;configtest&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    force-reload&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        force_reload&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    status&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    condrestart&lt;span class="p"&gt;|&lt;/span&gt;try-restart&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        rh_status_q &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt; 0&lt;/span&gt;
&lt;span class="code-line"&gt;            &lt;span class="p"&gt;;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    *&lt;span class="o"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;echo&lt;/span&gt; $&lt;span class="s2"&gt;&amp;quot;Usage: &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="s2"&gt; {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}&amp;quot;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;        &lt;span class="nb"&gt;exit&lt;/span&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;esac&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_20"&gt;添加脚本到系统&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;sudo cp this_script /etc/init.d/nginx&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig —add nginx&lt;/span&gt;
&lt;span class="code-line"&gt;sudo chkconfig nginx on&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="_21"&gt;验证&lt;/h4&gt;
&lt;p&gt;重启服务器,访问ip，看看是否能出现nginx成功的界面。&lt;/p&gt;
&lt;h4 id="_22"&gt;网站配置&lt;/h4&gt;
&lt;p&gt;采用虚拟主机的方式，在主配置文件中指定虚拟主机配置文件目录，目录中给每个网站写一个配置文件:&lt;/p&gt;
&lt;h5 id="nginxconf"&gt;主配置文件nginx.conf:&lt;/h5&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;user  henry;&lt;/span&gt;
&lt;span class="code-line"&gt;worker_processes  1;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;error_log  logs/error.log;&lt;/span&gt;
&lt;span class="code-line"&gt;#error_log  logs/error.log  notice;&lt;/span&gt;
&lt;span class="code-line"&gt;#error_log  logs/error.log  info;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;pid        logs/nginx.pid;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;events {&lt;/span&gt;
&lt;span class="code-line"&gt;    worker_connections  1024;&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;http {&lt;/span&gt;
&lt;span class="code-line"&gt;    include       mime.types;&lt;/span&gt;
&lt;span class="code-line"&gt;    default_type  application/octet-stream;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #log_format  main  &amp;#39;$remote_addr - $remote_user [$time_local] &amp;quot;$request&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;    #                  &amp;#39;$status $body_bytes_sent &amp;quot;$http_referer&amp;quot; &amp;#39;&lt;/span&gt;
&lt;span class="code-line"&gt;    #                  &amp;#39;&amp;quot;$http_user_agent&amp;quot; &amp;quot;$http_x_forwarded_for&amp;quot;&amp;#39;;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #access_log  logs/access.log  main;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    sendfile        on;&lt;/span&gt;
&lt;span class="code-line"&gt;    #tcp_nopush     on;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    #keepalive_timeout  0;&lt;/span&gt;
&lt;span class="code-line"&gt;    keepalive_timeout  65;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    gzip  on;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    include conf.d/*.conf;&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h5 id="vhost"&gt;vhost 配置&lt;/h5&gt;
&lt;p&gt;在跟nginx.conf同级目录下&lt;code&gt;mkdir conf.d&lt;/code&gt;,用于存放vhost配置文件
vhost文件: 例如:bookbbs.conf:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;server {&lt;/span&gt;
&lt;span class="code-line"&gt;   listen 80;&lt;/span&gt;
&lt;span class="code-line"&gt;   server_name  192.168.30.154;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   charset utf-8;&lt;/span&gt;
&lt;span class="code-line"&gt;   access_log  logs/bookbbs_access.log;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location /static/ {&lt;/span&gt;
&lt;span class="code-line"&gt;      alias /path/to/static/dir;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location /media/ {&lt;/span&gt;
&lt;span class="code-line"&gt;      alias /path/to/media/dir;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;   location / {&lt;/span&gt;
&lt;span class="code-line"&gt;       uwsgi_pass unix:///home/henry/softwares/nginx/logs/BookBBS.sock;&lt;/span&gt;
&lt;span class="code-line"&gt;       include uwsgi_params;&lt;/span&gt;
&lt;span class="code-line"&gt;       client_max_body_size    10m;&lt;/span&gt;
&lt;span class="code-line"&gt;   }&lt;/span&gt;
&lt;span class="code-line"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;要注意的是，配置文件中该加”/“的地方通通都得加上，否则会失败。
ps: 配置文件在git.oschin.net中能找到(私有仓库)&lt;/p&gt;</summary><category term="centos7"></category><category term="nginx"></category><category term="uwsgi"></category><category term="mysql"></category><category term="python"></category></entry></feed>